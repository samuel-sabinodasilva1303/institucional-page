{"kind":"FETCH","data":{"headers":{"access-control-allow-credentials":"true","access-control-allow-headers":"Accept, Content-Type, Origin, X-Requested-With, Authorization","access-control-allow-methods":"GET, PUT, POST, DELETE, OPTIONS","access-control-expose-headers":"Retsly-Session","application-ratelimit-limit":"100000","application-ratelimit-remaining":"99993","application-ratelimit-reset":"2024-08-16T18:51:08.556Z","burst-ratelimit-limit":"6667","burst-ratelimit-remaining":"6666","burst-ratelimit-reset":"2024-08-16T17:58:31.559Z","cache-control":"max-age=10","connection":"keep-alive","content-length":"254684","content-type":"application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false; charset=utf-8","date":"Fri, 16 Aug 2024 17:57:31 GMT","etag":"W/\"3e2dc-Hqr3d80+CNR2Ot2PUAI24wmVo1g\"","odata-version":"4.0","referrer-policy":"origin-when-cross-origin","requestid":"VQ56s2yhmNzW9RON35zO7vQxRw83PmpeqHPFB5Ne1NeoktaBtqX7WRf0QTkplBKT","strict-transport-security":"max-age=31536000","via":"1.1 a61500b02203448696480e37b5438a58.cloudfront.net (CloudFront)","x-amz-cf-id":"1cD2A0FAsENgP9f7ueUvGgq7j0tS9Cd3g7_BUbDaEkQqk-COj_Hf8w==","x-amz-cf-pop":"MIA3-P7","x-cache":"Miss from cloudfront","x-content-type-options":"nosniff","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-xss-protection":"0"},"body":"{"@odata.context":"https://api.bridgedataoutput.com/api/v2/OData/test/$metadata#Property","@odata.nextLink":"https://api.bridgedataoutput.com/api/v2/OData/test/Property?access_token=6baca547742c6f96a6ff71b138424f21&$skip=10","@odata.count":10006,"value":[{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fb94aa4055b9f29696f')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Veniam quo aut vel beatae earum autem velit eum. Vitae et tenetur dolorem tenetur vero. Consequatur perferendis et beatae quod labore aliquid laudantium omnis.\n \r\tExpedita et voluptas eius ut qui non consectetur a. Earum consequatur dignissimos dolores. Quia numquam ut molestias unde voluptatem ducimus similique magni. Reprehenderit ab voluptatem veniam est quaerat perferendis. Laboriosam deleniti enim est.","LockBoxLocation":"Et sapiente vitae maiores voluptas illum. Voluptatibus ut ipsa impedit voluptas est iure unde voluptatibus. Totam magni ullam quo porro quo iusto. Et debitis modi et aut.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-04-19","LaundryFeatures":["In Kitchen","Gas Dryer Hookup"],"Flooring":["Hardwood","Laminate","Vinyl","Tiles"],"PhotosCount":7,"FireplacesTotal":1,"ListTeamKey":null,"AdditionalParcelsYN":true,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":false,"SeniorCommunityYN":true,"Cooling":["Evaporative Cooler","Ceiling Fan","Central Air"],"ExteriorFeatures":["Balcony"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:45.614Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Error eos voluptatibus voluptatum nobis voluptate. Consequatur ipsum in molestiae et id consequuntur quod. Molestiae molestias sequi qui provident quam aut quasi atque.\n \r\tEa in libero modi repellendus. Exercitationem nulla commodi eaque commodi. Odit eius rerum et. Dolorem numquam amet nisi maxime similique ut. Magnam excepturi numquam quidem sint recusandae ut est.\n \r\tPariatur quas aut quod ad eveniet. Accusantium similique quia quam repellat quaerat commodi voluptas libero. Nam necessitatibus similique molestiae vero.\n \r\tPerferendis qui omnis molestiae fugit qui. Sed pariatur dignissimos quos molestias omnis vitae et exercitationem. Dicta aut eligendi eum earum. Nesciunt et nemo id minima aspernatur. Repellendus iusto dolorem deleniti quas.","DocumentsCount":4,"CancelationDate":null,"AssociationName":"reiciendis","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Eleanora Bayer Co","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Annually","CrossStreet":null,"OccupantPhone":"1-507-862-9447","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":1271,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal"],"MLSAreaMajor":null,"TaxAnnualAmount":729935,"LandLeaseAmount":81361746341,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Business","BathroomsTotalDecimal":9.5,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":"490","GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fb94aa4055b9f29696f","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":null,"CommonWalls":["No One Above","No One Below","1 Common Wall","No Common Walls","End Unit"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Agent"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Swaniawski, Gorczany and Johns","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Erica","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Ad minus consectetur minus iure blanditiis culpa eos. Non eos eaque consequatur et. Totam sunt officiis aliquam in.\n \r\tModi qui dicta fugiat et. Temporibus qui minus expedita. Officiis vel vitae aspernatur iusto quae.","Concessions":null,"AttachedGarageYN":true,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel","Composite"],"BuyerAgentNamePrefix":null,"ParkingTotal":2,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":true,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Mosciski and Sons","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":[],"CoListAgentOfficePhone":null,"WaterfrontYN":false,"BathroomsFull":3,"LotSizeAcres":8,"SubdivisionName":"id","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":true,"Fencing":["Wire"],"LotSizeSource":"Agent","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Ullam aut porro veniam occaecati fugit eaque nulla. Ipsa quis eligendi enim sed. Accusamus vel eaque aut. Officia quaerat corrupti id.","FarmCreditServiceInclYN":null,"ListingService":"Limited Service","Elevation":22779,"WaterSource":["Municipal","Irrigation District","Private Utility"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Sliding Doors"],"StoriesTotal":3,"YearBuilt":1969,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":8,"CoListOfficeFax":null,"Disclaimer":"Officia assumenda doloremque deserunt. Est inventore facere itaque quam dignissimos. Autem ducimus eos consectetur ducimus sed et libero voluptas. Dolor aliquid error autem et ipsa pariatur vitae fugiat.\n \r\tEst molestias autem numquam mollitia repudiandae et quam maiores. Quod non quibusdam voluptatem tenetur molestiae similique reprehenderit omnis. Ut non eum cumque sunt ratione illo. Eum nam eos pariatur qui. Aut placeat neque esse quo non.","ZoningDescription":"Residential","PreviousListPrice":438888,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":40,"PetsAllowed":["Yes"],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Tenant","OtherStructures":[],"AssociationAmenities":[],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-01-15T07:50:47.467Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":7411,"TaxAssessedValue":729187,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"1-903-317-3475","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":["Indoor Pool","Outdoor Pool"],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Boiler","Heat Pump","Forced Air"],"StructureType":[],"BuildingAreaSource":"Estimate","BathroomsOneQuarter":3,"BuilderModel":"Practical Wooden Car","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Hortense","OwnerPays":[],"BedroomsPossible":9,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Hilll-Reynolds","ListingId":"5dba1fb94aa4055b9f296970","DocumentsChangeTimestamp":null,"CommunityFeatures":[],"ShowingStartTime":null,"BathroomsTotalInteger":14,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":11,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Acres","City":"Destineyhaven","OwnerPhone":null,"InternetEntireListingDisplayYN":false,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":false,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"East","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Concrete"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Adele Aron Sporer","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Vel voluptate omnis libero accusamus et occaecati ut illo. Et qui veritatis non aut. Reprehenderit harum non et quam ipsum rerum. Architecto fugit quibusdam non.\n \r\tQui sunt labore rerum aliquid. Ea expedita quia nihil. Qui odit aliquam consequatur deleniti. Quis est veniam ullam nisi voluptatibus perspiciatis et. Unde nam quidem in nihil inventore tempora qui enim.\n \r\tQuas consequatur temporibus eum in tempore fugiat itaque porro. Maxime et quo eos. Expedita dolores non numquam labore ut magni et. Officia quae aut facilis itaque consequatur corporis. Cum et fugiat rerum et ullam.\n \r\tQuo necessitatibus eum nam incidunt aut a incidunt minus. Est porro non laboriosam dolorum odit quidem sit cum. Laboriosam animi veritatis neque quis quaerat.","InternetConsumerCommentYN":true,"BuildingAreaTotal":9505842,"YearBuiltSource":"Agent","OtherEquipment":["Intercom"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"Bi-Monthly","BedroomsTotal":4,"ShowingInstructions":"Cumque animi vero explicabo ipsa aut. Sint similique ut ut aut. Repellat odio dolorem aspernatur sit. Est eos vero et aut quos est officiis.\n \r\tCorporis qui iusto rem ab voluptas molestiae id. Dignissimos pariatur accusamus et neque est rerum. Ducimus nihil et cumque. Et est ex optio sequi dolores blanditiis consequatur aut. Quia velit quisquam aut harum molestiae quam aperiam.\n \r\tReprehenderit et odio praesentium est nostrum. Dignissimos temporibus dignissimos fugiat laborum neque. Voluptas est temporibus impedit autem veritatis accusamus eos iste. Ea vitae consectetur ut.\n \r\tEst sed atque reprehenderit voluptatem et est dolorem. Autem tempora sit a ullam occaecati suscipit voluptas. Fuga error dolorem culpa laborum at saepe repudiandae. Consequatur at hic officia est accusamus omnis eligendi doloribus.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":false,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa4a2a50c5b81f0826d","OnMarketDate":"2019-09-20","CarportSpaces":2,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-03-24","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Meters","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.104947,"AvailabilityDate":"2019-11-28","TaxTract":"Lot 91 of Block 93 of Tract 2934 of Abrahamtown","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":false,"PublicRemarks":"Dolorum maxime ipsam sit nam hic. Placeat architecto quasi repudiandae in voluptatibus provident nihil. Est voluptatem nemo et nostrum.\n \r\tFacilis nostrum natus perferendis. Voluptatem dignissimos eum neque ut. Officia animi maxime maiores assumenda. Perspiciatis voluptatum amet corrupti aut laborum quis voluptatem.\n \r\tDicta aut vero est aut autem voluptas. Odit odio sed quisquam incidunt omnis iusto. Voluptatem perspiciatis fuga nisi magnam aliquam assumenda.\n \r\tNon nam quam laudantium ea voluptatibus. Omnis eveniet eius amet animi rerum placeat. Impedit accusantium aut dolore consequatur odit.","FinancialDataSource":["Listing Broker"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":[],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"West Virginia","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Granite"],"ListAgentPager":null,"PriceChangeTimestamp":"2018-11-03T13:23:36.836Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"C-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Agent","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":6963,"CoBuyerOfficeName":null,"ListOfficeName":"Vandervort LLC Realty","TaxBlock":"Lot 23 of Block 0 of Tract 1149 of North Madisyn","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["eaque","consequatur","velit"],"BusinessType":["Decorator"],"DualVariableCompensationYN":false,"Latitude":33.717431,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":761167,"RoadFrontageType":[],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":879949,"DOH3":null,"BelowGradeFinishedAreaSource":"Assessor","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Bi-Weekly","CoListAgentVoiceMailExt":null,"StateOrProvince":"Ohio","AboveGradeFinishedAreaUnits":"Square Feet","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":4,"MiddleOrJuniorSchool":"Hegmann-McGlynn","AssociationFeeIncludes":["Sewer","Gas","Snow Removal","Maintenance Grounds","Water"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow","Trulia"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"459","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":[],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb0267","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":1,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2018-12-11T08:14:51.827Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Erica Hortense Cummerata","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":1,"PropertyCondition":[],"FrontageType":["Golf Course","Lakefront"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1368","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Grillage"],"View":["View","Lake View"],"SignOnPropertyYN":false,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Nulla aliquid saepe perferendis. Repellendus facilis magnam culpa. Et voluptatem ratione aut autem perferendis est. Exercitationem officiis dolores dignissimos. Qui enim fugit non.","BuyerAgentPager":null,"HighSchool":"Schulist Inc","LeaseConsideredYN":true,"HomeWarrantyYN":false,"Levels":["One Level","Two Level","Split Level","Three or More Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Cummerata","ListAgentURL":null,"InteriorFeatures":["Non qui rerum consequatur commodi quam iure. Id a ea placeat et. Voluptatem veniam perspiciatis tempora sit. Laboriosam quasi quibusdam voluptas inventore numquam nostrum. Aut exercitationem ut repudiandae velit delectus."],"LockBoxType":["Nobis nesciunt ut est nam quo perspiciatis quo quis. Praesentium beatae nam et consequuntur velit qui nostrum omnis. Assumenda aliquam minima sed ullam aspernatur neque ullam."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2018-12-15","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa4a2a50c5b81f0826e","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"887 x 917 x 997 x 219","ModificationTimestamp":"2019-04-16T11:36:08.184Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 95 of Block 77 of Tract 412 of Marjoriehaven","BusinessName":"Quitzon, Lehner and Ortiz","BuyerAgentEmail":null,"Coordinates":[-118.104947,33.717431],"AccessCode":"pxg9","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":false,"LotDimensionsSource":"Estimate","Country":"US","UnitNumber":"#836","CoListAgentPreferredPhoneExt":null,"OpenParkingYN":true,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb0268","Inclusions":"Qui velit quis neque qui. Veritatis repudiandae rem suscipit quia nulla dolor non cum. Itaque impedit animi repellat consequatur inventore qui. Non nesciunt consequuntur eos. Aut et ducimus tempora est sint.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"(789) 095-5645","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Meteres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Ground Level w/ Steps","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"203.973.9847 x7734","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":4,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Yes Connected"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":"Sandy Vista Mills","ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Assessor","ListOfficeFax":null,"AnchorsCoTenants":"Renner, Jaskolski and Sauer,O'Reilly Group,Simonis LLC,Durgan-Heidenreich,Kautzer-Mayert,Johnston-Goodwin","PatioAndPorchFeatures":["aut","dolorum","quis"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"Claytown","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"jw8kfemq999s5194fa92z90gt","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace","Wood","Gas"],"WindowFeatures":[],"SpecialListingConditions":["Standard"],"NewConstructionYN":true,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":3,"OriginalListPrice":770747,"AssociationFee2":351,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/05.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296968","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296968","ShortDescription":"Degenero taedium similique earum reiciendis."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/02.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296969","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296969","ShortDescription":"Depulso allatus templum creator tero bonus."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/19.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29696a","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29696a","ShortDescription":"Voro aduro vero calamitas stultus cruentus."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/30.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29696b","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29696b","ShortDescription":"Alienus casso speciosus."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/04.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29696c","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29696c","ShortDescription":"Asper in quibusdam."},{"Order":6,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/26.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29696d","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29696d","ShortDescription":"Spectaculum voluntarius demo."},{"Order":7,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/13.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29696e","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29696e","ShortDescription":"Amaritudo vulgo soluta vorago aiunt."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"Missouri","OriginalEntryTimestamp":"2019-04-06T17:51:44.720Z","BuildingFeatures":["Cafeteria","Elevator"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Partnership","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Est non harum sed voluptas rem aut sint. Voluptas minima quia dolores. Deleniti aut beatae quia et aut aut commodi. Consequatur quasi ea ut.","CopyrightNotice":"Dolores porro nobis neque ut quia vero. Tempore enim et placeat sit omnis molestiae non. Reiciendis ut ipsa aut reprehenderit voluptatem iste quis eius. Amet dolores officia distinctio.\n \r\tEt possimus in perferendis nam omnis quis quibusdam. Eum quo culpa possimus commodi sed sunt. Aut excepturi ipsa enim maiores dolor voluptatem. Qui quia sit numquam vel modi facilis hic iusto. Ea commodi vel ea et cumque odio voluptatem.","ShowingContactName":"Loraine Federico Padberg","MobileDimUnits":null,"LotFeatures":["doloribus","commodi","quis","ab","molestias","fugiat","autem","minus","voluptatem"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"98253","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":74,"BuyerOfficeName":null,"AssociationFee":104,"LeaseAmount":null,"LotSizeSquareFeet":1998,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Tennessee","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["est","nihil","eos","exercitationem","quasi","sit","accusamus","cum"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":"#836 490 Sandy Vista Mills, Destineyhaven, Ohio 98253","OpenParkingSpaces":null,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fb94aa4055b9f296948')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Corrupti qui reprehenderit tempore. Et officia pariatur molestiae. Quae alias dolores at atque sunt sint esse distinctio. Aut nobis facilis odit.\n \r\tHarum illo id facilis molestiae magni enim. Eius doloribus ut assumenda recusandae omnis minima provident. Aut et laborum molestias adipisci iure veniam.","LockBoxLocation":"Odit qui ut est consequatur omnis nihil. Laboriosam sunt dolorem doloribus perferendis alias nam culpa. Recusandae est nulla qui.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-05-13","LaundryFeatures":["In Kitchen"],"Flooring":["Hardwood","Laminate"],"PhotosCount":8,"FireplacesTotal":3,"ListTeamKey":null,"AdditionalParcelsYN":false,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":false,"SeniorCommunityYN":false,"Cooling":["Evaporative Cooler"],"ExteriorFeatures":["Balcony"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:45.603Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Quos nihil esse et fuga officiis. Odit omnis repellat quis. Aspernatur aliquid vitae et laudantium neque. Dolores voluptatum modi accusantium incidunt beatae voluptas omnis cupiditate.\n \r\tEst deleniti repudiandae aut dolore. Id quae modi odit. Laudantium nihil enim excepturi consequatur molestiae ad debitis. Accusamus sit deleniti velit quam in.\n \r\tAssumenda doloribus ratione nesciunt quam. Rem cumque id voluptatem a nemo et. Quia accusantium deleniti voluptatibus itaque sit.\n \r\tRem animi eveniet illo et. A aperiam molestiae accusantium voluptatem quisquam. Distinctio dolores aut harum et aut ipsum assumenda consectetur. Rerum rerum asperiores dicta consequatur nam quaerat est.","DocumentsCount":4,"CancelationDate":null,"AssociationName":"sint","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Zane Ryan Co","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Quarterly","CrossStreet":null,"OccupantPhone":"303-630-2788","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":4001,"BuyerAgentFax":null,"MajorChangeType":"Price reduction","ListingKeyNumeric":null,"Appliances":["Dishwasher"],"MLSAreaMajor":null,"TaxAnnualAmount":775961,"LandLeaseAmount":54121135492,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Business","BathroomsTotalDecimal":7.75,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":null,"GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fb94aa4055b9f296948","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":"670.560.5559","CommonWalls":["No One Below","No One Above","1 Common Wall","End Unit","2+ Common Walls"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Broker"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"MacGyver-Blick","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Destany","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Dolorem velit quo sed et facilis id repellendus mollitia. Sunt veritatis quaerat dolores at amet delectus odio ea. Nesciunt quibusdam rerum itaque aliquam beatae molestiae maiores culpa. Porro nihil voluptate molestiae maiores mollitia itaque. Voluptas ut et sapiente.\n \r\tNeque repellendus esse sapiente assumenda. Laudantium quia maiores voluptas illo. Neque autem porro ipsa ipsam repellat est possimus. Iure iste quaerat nisi velit dolorum harum id ea. Veritatis sint beatae minus.","Concessions":null,"AttachedGarageYN":false,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal"],"BuyerAgentNamePrefix":null,"ParkingTotal":4,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":true,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Barton and Sons","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":[],"CoListAgentOfficePhone":null,"WaterfrontYN":true,"BathroomsFull":9,"LotSizeAcres":3,"SubdivisionName":"voluptatibus","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":false,"Fencing":["Block","Wrought Iron","Chain Link","Wire","Wood"],"LotSizeSource":"Assessor","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Laborum nobis sit accusamus sequi enim reprehenderit error. Molestiae ad mollitia rerum aut eum et. Asperiores delectus velit deleniti et id eos. Tempore quo dolor excepturi officiis.","FarmCreditServiceInclYN":null,"ListingService":"Full Service","Elevation":31582,"WaterSource":["Municipal","Irrigation District"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Sliding Doors","French Doors","Overhead Doors"],"StoriesTotal":3,"YearBuilt":1982,"ElectricOnPropertyYN":null,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":8,"CoListOfficeFax":null,"Disclaimer":"Ipsa dolor aut qui inventore. Esse ducimus animi qui omnis itaque. Fugiat officia quo sit autem sit placeat eos.\n \r\tVoluptas sint consequatur accusantium aut nisi. Iusto dolores ipsum deserunt nihil vel. Consequatur et ullam voluptatem fuga. Neque natus consequatur aut sint porro quasi.","ZoningDescription":"Rezone Possible","PreviousListPrice":723313,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":85,"PetsAllowed":[],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Tenant","OtherStructures":["eius","sed","dolore","dignissimos","impedit","sed","aut","molestiae","nemo"],"AssociationAmenities":["Pool"],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-09-20T14:08:30.733Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":3253,"TaxAssessedValue":434937,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"445-563-7439","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":["Indoor Pool"],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Boiler","Forced Air","Wood"],"StructureType":[],"BuildingAreaSource":"Agent","BathroomsOneQuarter":1,"BuilderModel":"Ergonomic Granite Hat","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Selmer","OwnerPays":[],"BedroomsPossible":8,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Hyatt, Russel and Langworth","ListingId":"5dba1fb94aa4055b9f296949","DocumentsChangeTimestamp":null,"CommunityFeatures":["inventore"],"ShowingStartTime":null,"BathroomsTotalInteger":11,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":14,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Square Feet","City":"Aniyahville","OwnerPhone":null,"InternetEntireListingDisplayYN":true,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":false,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Available"],"DirectionFaces":"West","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Brick"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Reagan Breana Sipes","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Et et architecto atque modi maiores similique quis. Occaecati ullam incidunt iste officia sint minima voluptas qui. Eos aut molestiae aliquid nulla incidunt.\n \r\tConsectetur dicta et adipisci ducimus iusto consequatur. Dolorum quia eos veniam amet dolores sapiente temporibus voluptatum. Voluptatibus aspernatur esse incidunt dolor aut fuga soluta. Doloribus consequatur dignissimos voluptatem soluta. Cumque cupiditate autem impedit magnam dignissimos.\n \r\tNon in delectus eveniet et error iste earum doloremque. Laboriosam ut quae quos ad pariatur. Praesentium sit non consequatur adipisci similique.\n \r\tVoluptatem delectus harum in dolor assumenda et amet error. Qui quam qui sapiente excepturi ut nam est. Sint molestias ut iure esse accusantium qui inventore.","InternetConsumerCommentYN":false,"BuildingAreaTotal":5344088,"YearBuiltSource":"Agent","OtherEquipment":["TV Antenna","Central Vacuum Nozzle"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"Semi-Annually","BedroomsTotal":3,"ShowingInstructions":"Provident expedita nobis error eveniet aliquam necessitatibus. Delectus aliquam voluptas in omnis. Libero error voluptas doloribus quod voluptas rerum natus labore. Sit sunt aut explicabo. Possimus qui eveniet dignissimos ipsam delectus aut qui.\n \r\tDeserunt iure molestias quae illo. Quas occaecati qui ut autem. Amet molestiae harum et veniam assumenda quas quasi.\n \r\tConsequuntur maxime est ratione incidunt aperiam. Illum vel enim non voluptas. Inventore exercitationem minima sunt non error porro aut. Accusamus velit eos voluptas.\n \r\tDelectus consequuntur velit vel dicta labore laudantium perferendis aperiam. Ut enim similique velit tempore quia sint eos nostrum. Reiciendis provident esse repudiandae consequatur.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":false,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa6a2a50c5b81f08a9d","OnMarketDate":"2019-08-06","CarportSpaces":1,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-05-08","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Meters","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":true,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.069272,"AvailabilityDate":"2019-12-10","TaxTract":"Lot 76 of Block 38 of Tract 3856 of East Kattietown","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":false,"PublicRemarks":"Vel incidunt id quia. Praesentium et at velit dolor in vel. Similique excepturi sequi qui provident commodi. Quia ea rerum non omnis ab perferendis. Aut excepturi non aperiam inventore in.\n \r\tOmnis occaecati amet quos ea molestias. Vel dolorum dolore nulla ipsum amet veritatis iure. Optio doloremque necessitatibus ad doloribus deserunt ipsa. Asperiores ut saepe est dolores consequatur illum dolore incidunt.\n \r\tLaboriosam possimus culpa voluptatum aut delectus et. Dolore ut voluptatem molestiae. Nihil sed aut saepe. Aut laborum vel numquam natus voluptas magnam aspernatur. Et ea maxime voluptatem omnis quidem accusamus deleniti nobis.\n \r\tVel explicabo corrupti et. Quisquam ad a praesentium ipsa sit dolor praesentium quibusdam. Laudantium excepturi architecto quaerat consectetur.","FinancialDataSource":["Listing Broker"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Delaware","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Cement"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-06-06T21:59:04.190Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"R-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Assessor","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":7046,"CoBuyerOfficeName":null,"ListOfficeName":"Pagac and Sons Realty","TaxBlock":"Lot 44 of Block 11 of Tract 1380 of Kovacekville","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)","Other","Private","Seller Financing","Trust Deed","USDA"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["dolor","cupiditate"],"BusinessType":["Restaurant"],"DualVariableCompensationYN":true,"Latitude":34.08336,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":485425,"RoadFrontageType":["Freeway frontage"],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":632204,"DOH3":null,"BelowGradeFinishedAreaSource":"Agent","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Annually","CoListAgentVoiceMailExt":null,"StateOrProvince":"Mississippi","AboveGradeFinishedAreaUnits":"Acres","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":3,"MiddleOrJuniorSchool":"Brekke LLC","AssociationFeeIncludes":["Utilities","Electricity","Gas"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow","Trulia"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"22","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":["Bylaw Infractions","Environmental Concerns"],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb0282","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":4,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-02-18T22:45:53.425Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Destany Selmer Schamberger","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":2,"PropertyCondition":[],"FrontageType":["Golf Course","Lakefront"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1163","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Slurry"],"View":[],"SignOnPropertyYN":true,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Aliquid omnis exercitationem unde voluptatem eveniet earum. Ut consectetur voluptatem expedita fuga et minus id similique. Consectetur minus magni quia et.","BuyerAgentPager":null,"HighSchool":"Fadel-Nicolas","LeaseConsideredYN":false,"HomeWarrantyYN":true,"Levels":["One Level","Two Level","Split Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Schamberger","ListAgentURL":null,"InteriorFeatures":["Corporis sit sit excepturi iure cupiditate at. Labore commodi debitis hic. Dolores aut labore modi esse dolor. Praesentium ea saepe repellat animi. Exercitationem illo amet ea dolor nihil nemo provident."],"LockBoxType":["Quas blanditiis sed non et beatae asperiores et odio. Nam vero enim magni praesentium quia ipsa eos praesentium. Illo et aliquid sint a sit numquam dolorem."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":null,"ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa6a2a50c5b81f08a9e","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"995 x 434 x 138 x 251","ModificationTimestamp":"2019-05-02T01:57:48.946Z","PropertyAttachedYN":true,"BuyerAgentKey":null,"TaxLot":"Lot 75 of Block 48 of Tract 104 of Harveyfurt","BusinessName":"Beatty and Sons","BuyerAgentEmail":null,"Coordinates":[-118.069272,34.08336],"AccessCode":"xhnd","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":true,"LotDimensionsSource":"Agent","Country":"US","UnitNumber":null,"CoListAgentPreferredPhoneExt":null,"OpenParkingYN":true,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb0283","Inclusions":"Dolor et eum et. Unde aliquam quidem provident eos. Cupiditate placeat beatae qui cupiditate et laboriosam voluptatem.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"581-095-7294","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Feet","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Ground Level w/o Steps","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"(857) 610-1508 x3606","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":3,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":null,"ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Agent","ListOfficeFax":null,"AnchorsCoTenants":"Smitham, Toy and Stracke,Nitzsche, Yost and Lindgren,Reichert LLC,Muller LLC,Kuphal and Sons,Moen-Herzog,Dare, Gleichner and Kris,Kshlerin-Cummings,Conroy and Sons","PatioAndPorchFeatures":["laudantium","velit","repellendus","voluptates","nesciunt","accusantium","doloremque","voluptates","molestiae"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"Lake Gretchenland","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"qoq51z14bnugpa8bnpug09qkx","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace","Wood","Gas"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO","Short Sale","Probate","Auction"],"NewConstructionYN":true,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":1,"OriginalListPrice":312752,"AssociationFee2":174,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":[],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/29.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296940","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296940","ShortDescription":"Caecus cruciamentum corona despirmatio."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/23.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296941","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296941","ShortDescription":"Similique defero vitiosus charisma."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/33.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296942","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296942","ShortDescription":"Qui quia nisi veritatis tricesimus molestiae."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/07.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296943","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296943","ShortDescription":"Crebro vesica victus sed vestrum."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/14.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296944","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296944","ShortDescription":"Adduco architecto sulum subnecto ara tabella."},{"Order":6,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/12.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296945","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296945","ShortDescription":"Admoveo sufficio abeo verbera summopere."},{"Order":7,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/01.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296946","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296946","ShortDescription":"Conspergo vigor dedecor."},{"Order":8,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/25.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296947","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296947","ShortDescription":"Auctus avoco vulnus cum tum sub."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"Tennessee","OriginalEntryTimestamp":"2019-06-22T04:33:29.316Z","BuildingFeatures":["Gym"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Sole P","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Sunt neque quis sit voluptatibus et sit aperiam. Eum consectetur velit voluptas dolores est delectus similique. Et temporibus reiciendis earum sint culpa eligendi.","CopyrightNotice":"Quas culpa debitis eos. Aut vel quaerat aliquam quo sapiente vel. Provident incidunt et aut totam aut saepe. Iste accusamus assumenda nihil explicabo.\n \r\tAperiam exercitationem impedit quo. Aut tenetur ipsam quia commodi dolor aut. Consequatur fugiat eligendi quas magni aperiam. Vitae veniam consectetur non totam quia impedit rem.","ShowingContactName":"Casimer Doyle Koch","MobileDimUnits":null,"LotFeatures":["nulla","dolor","adipisci","sapiente","maiores","nam"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"95314-5550","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":15,"BuyerOfficeName":null,"AssociationFee":292,"LeaseAmount":null,"LotSizeSquareFeet":768,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Nebraska","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["est"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":null,"OpenParkingSpaces":null,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fb94aa4055b9f2969b1')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Rem asperiores explicabo sed non provident qui. Ut dicta velit libero libero est est. Voluptatem ab dicta voluptatem perferendis iste.\n \r\tExercitationem nobis quisquam quaerat quas aliquam est cum. Ratione at impedit doloribus veritatis eos eum. Dolor quis voluptatem non dolorem qui non.","LockBoxLocation":"Magnam aperiam ipsum earum. Magnam nemo et rerum minus. Rerum maiores eius enim tenetur asperiores et.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-06-29","LaundryFeatures":["In Kitchen","Gas Dryer Hookup"],"Flooring":["Hardwood","Laminate","Vinyl","Tiles"],"PhotosCount":7,"FireplacesTotal":1,"ListTeamKey":null,"AdditionalParcelsYN":true,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":true,"SeniorCommunityYN":false,"Cooling":["Evaporative Cooler","Ceiling Fan","Central Air"],"ExteriorFeatures":["Balcony","Fenced Yard"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:45.629Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Consequuntur et non quis maiores ab asperiores voluptatum quae. Doloribus non autem quas dolor. Amet est nesciunt aut temporibus repudiandae. Quae aperiam odit et eveniet quaerat.\n \r\tLaudantium illum aut illum et libero dolor. Non ipsa in minima tenetur eos et natus. Vel voluptas recusandae ut. Id esse dolorum quam quis.\n \r\tOmnis amet qui sit error ex. Magni suscipit vero asperiores. Sapiente mollitia voluptatem aperiam. Rerum sint quia consequatur non reiciendis rerum nam inventore. Hic voluptas perspiciatis dolore qui at voluptas incidunt vel.\n \r\tEius accusamus eaque distinctio facilis eligendi. Molestias ut aliquid enim amet. Non culpa et dolor laborum. Excepturi illo voluptatum qui perspiciatis atque aperiam.","DocumentsCount":5,"CancelationDate":null,"AssociationName":"aliquid","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Lucinda Veum II Bldg","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Daily","CrossStreet":null,"OccupantPhone":"(267) 804-6855","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":1642,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal","Oven","Microwave","Pantry"],"MLSAreaMajor":null,"TaxAnnualAmount":267810,"LandLeaseAmount":12483315205,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Residential","BathroomsTotalDecimal":6.25,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Canceled","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":null,"GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fb94aa4055b9f2969b1","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":"794-927-5397","CommonWalls":["2+ Common Walls","1 Common Wall","End Unit"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Seller"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Morar and Sons","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Consuelo","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Repellendus ut voluptas cupiditate et minima. Impedit eligendi laudantium sequi. Quae atque velit ut maiores sed.\n \r\tId sequi mollitia corrupti rerum eos hic dignissimos dolores. Repellendus quaerat ipsa est tenetur facilis ut vel qui. Qui facere alias alias earum vitae enim cupiditate. Aut ipsa vitae esse placeat unde voluptatibus tenetur. Doloribus sapiente eos aut aliquid consequatur repudiandae.","Concessions":null,"AttachedGarageYN":false,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel","Composite","Architectural Style"],"BuyerAgentNamePrefix":null,"ParkingTotal":2,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":true,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Anderson, Dickinson and Grant","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":[],"CoListAgentOfficePhone":null,"WaterfrontYN":false,"BathroomsFull":2,"LotSizeAcres":2,"SubdivisionName":"quis","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":false,"Fencing":["Wire","Chain Link","Block"],"LotSizeSource":"Assessor","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Explicabo et id asperiores expedita et nisi illo. Debitis sint rerum soluta possimus quis rerum aut culpa. Tempora illum beatae nobis excepturi aut est at omnis. Qui dignissimos quo labore nihil accusantium ut pariatur asperiores.","FarmCreditServiceInclYN":null,"ListingService":"Full Service","Elevation":40989,"WaterSource":["Municipal","Irrigation District","Private Utility"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Truck Doors","Overhead Doors","Glass Doors","Sliding Doors","French Doors"],"StoriesTotal":3,"YearBuilt":2002,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":8,"CoListOfficeFax":null,"Disclaimer":"Vero est harum non aut culpa minima. Possimus delectus molestiae sunt fugit quibusdam reprehenderit earum. Cum beatae excepturi veniam quia et adipisci est et.\n \r\tDelectus officiis neque vitae nesciunt velit et. Qui quas sequi nihil itaque deleniti eaque aliquid occaecati. Et suscipit omnis iure.","ZoningDescription":"Agricultural","PreviousListPrice":949508,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":83,"PetsAllowed":["Yes","No","Call"],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Owner","OtherStructures":[],"AssociationAmenities":["Pool","Clubhouse"],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-08-18T22:47:28.274Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":3341,"TaxAssessedValue":579516,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"352-256-8207","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":["Indoor Pool","Outdoor Pool"],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Electric","Boiler","Heat Pump"],"StructureType":[],"BuildingAreaSource":"Agent","BathroomsOneQuarter":3,"BuilderModel":"Sleek Granite Pants","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Cristian","OwnerPays":[],"BedroomsPossible":8,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City","County"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Bechtelar, Donnelly and Lakin","ListingId":"5dba1fb94aa4055b9f2969b2","DocumentsChangeTimestamp":null,"CommunityFeatures":["praesentium","eaque","animi","ea","similique","impedit","voluptate","voluptatem","dolores"],"ShowingStartTime":null,"BathroomsTotalInteger":10,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":10,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Acres","City":"North Arturo","OwnerPhone":null,"InternetEntireListingDisplayYN":true,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Available"],"DirectionFaces":"South-West","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Wood"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Adolphus Rod Dicki","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Illo blanditiis eum similique neque magnam dolor. Qui fugit sit facilis iste accusantium dicta. Modi suscipit deserunt at delectus doloremque. Vitae ab sunt officiis delectus quidem.\n \r\tUt magnam qui qui. Et tempore cumque esse nam similique ab. Beatae ut cum exercitationem.\n \r\tUt omnis est quibusdam repudiandae quos sequi quia voluptate. Et provident non in labore. Aut in est corporis sapiente deleniti delectus. Aspernatur maiores sit ducimus error. Voluptatibus eveniet sunt voluptatum minima consequatur necessitatibus.\n \r\tQuia corporis sequi asperiores sint quis. Eos sed voluptate a magnam sed voluptatem qui quam. Enim earum ipsam tempore. Unde nobis autem ducimus hic veniam qui. Error voluptatem laboriosam et asperiores.","InternetConsumerCommentYN":false,"BuildingAreaTotal":4670629,"YearBuiltSource":"Agent","OtherEquipment":[],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"Monthly","BedroomsTotal":3,"ShowingInstructions":"Beatae sit enim eos vero ratione eligendi distinctio. Soluta soluta earum consectetur consequatur. Corporis enim et qui autem. Omnis exercitationem quos dolorum nam beatae quia facilis. Et vero eius quaerat.\n \r\tUt eveniet eum ea voluptas ducimus et dolorem sint. Placeat itaque dolores nihil aut sint. Consectetur autem pariatur debitis ipsum expedita aut nesciunt. Ad qui sit molestiae consequatur voluptatibus consequatur.\n \r\tCommodi sed id a. Velit repudiandae et aut molestias inventore qui consequatur sed. Quas deserunt beatae voluptates. Consequatur fuga omnis id. In velit ex deserunt.\n \r\tVeniam esse ipsam in maiores placeat. Perferendis in eum dolores non. Molestias aut facere qui accusamus placeat voluptates assumenda corporis. Et suscipit dolores inventore et error at labore est. Vel tempore qui odit.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":false,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa4a2a50c5b81f08301","OnMarketDate":"2019-08-08","CarportSpaces":3,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-06-20","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Meters","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.045641,"AvailabilityDate":"2019-12-30","TaxTract":"Lot 48 of Block 37 of Tract 322 of Mertzberg","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":true,"PublicRemarks":"Labore at accusamus corrupti ut. Aperiam voluptatibus enim et tenetur voluptas. Non cum eum necessitatibus.\n \r\tQuia repellendus possimus assumenda. Aliquam sit ex repellendus vitae. Unde itaque sapiente maiores est voluptas ut sunt. Voluptatem adipisci molestias voluptate quisquam sit.\n \r\tVelit aliquam eos voluptatem aut reprehenderit id. Voluptas harum possimus impedit magnam inventore molestiae. Consequatur aut adipisci itaque doloribus sint cupiditate beatae ipsum.\n \r\tAnimi consequatur quia quidem non aut. Veritatis quia illo debitis molestiae maiores. Fugit et sint sit atque dolorum. Ut in atque ea sapiente error blanditiis consequuntur aut.","FinancialDataSource":[],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Nebraska","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Granite"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-04-29T14:35:27.246Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"C-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Agent","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":9042,"CoBuyerOfficeName":null,"ListOfficeName":"Vandervort LLC Realty","TaxBlock":"Lot 96 of Block 84 of Tract 329 of Uniquestad","CoListAgentTollFreePhone":null,"BuyerFinancing":[],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":[],"BusinessType":["Ice Cream/Frozen Yogurt"],"DualVariableCompensationYN":true,"Latitude":33.8756,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":105162,"RoadFrontageType":["Freeway frontage"],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":1401685,"DOH3":null,"BelowGradeFinishedAreaSource":"Agent","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Annually","CoListAgentVoiceMailExt":null,"StateOrProvince":"Michigan","AboveGradeFinishedAreaUnits":"Square Feet","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":4,"MiddleOrJuniorSchool":"Wiza-Mayert","AssociationFeeIncludes":["Insurance","Sewer","Utilities","Trash","Pest Control","Maintenance Grounds","Cable TV","Water","Gas","Electricity","Earthquake Insurance","Security","Snow Removal"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow","Trulia"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"403","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":["Bylaw Infractions","Environmental Concerns"],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb0267","DistanceToGasNumeric":null,"FireplaceYN":true,"BathroomsThreeQuarter":4,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2018-11-23T06:45:16.683Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Consuelo Cristian Braun","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":1,"PropertyCondition":[],"FrontageType":["Golf Course","Lakefront"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1436","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Well"],"View":["View","Lake View"],"SignOnPropertyYN":true,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Voluptatibus nobis rerum id corporis praesentium. Soluta iusto ipsam voluptas atque. Rem aliquam rem ea vel corrupti ut incidunt.","BuyerAgentPager":null,"HighSchool":"Lemke, Eichmann and O'Connell","LeaseConsideredYN":true,"HomeWarrantyYN":true,"Levels":["One Level","Two Level","Split Level","Three or More Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Braun","ListAgentURL":null,"InteriorFeatures":["Qui et voluptas dicta non maxime et debitis. Rerum maiores eos esse. Praesentium tempora sed et illum enim quam dolor vel. Debitis tempora similique explicabo in numquam. Et rem amet aut occaecati alias quia."],"LockBoxType":["Quia voluptatem ut officiis illo pariatur adipisci facilis. Vero maiores et mollitia delectus incidunt ut id. Accusamus et expedita nulla rem. Nulla numquam eum magnam id. Et cupiditate quidem aspernatur."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":null,"ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa4a2a50c5b81f08302","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"768 x 706 x 965 x 313","ModificationTimestamp":"2019-09-30T08:29:57.172Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 48 of Block 13 of Tract 794 of South Tatum","BusinessName":"Batz, Dooley and Gutmann","BuyerAgentEmail":null,"Coordinates":[-118.045641,33.8756],"AccessCode":"wh74","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":false,"LotDimensionsSource":"Estimate","Country":"US","UnitNumber":null,"CoListAgentPreferredPhoneExt":null,"OpenParkingYN":true,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb0268","Inclusions":"Autem dolorem delectus accusantium sint quis praesentium. Sequi quod sed velit rem iste rerum fugiat in. Enim recusandae amet laboriosam debitis hic quos qui. Et cupiditate voluptatem tempora placeat eaque. Atque debitis eius aut suscipit voluptas.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"230.227.0865","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Meteres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Ground Level w/ Steps","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"878-626-6335 x6348","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":1,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":null,"ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Agent","ListOfficeFax":null,"AnchorsCoTenants":"Cruickshank Inc,Hansen LLC,Kuhlman LLC,Hammes-Quigley","PatioAndPorchFeatures":[],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"Hillsland","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"jcw5ai9agpcwu3zdu2wwpkkak","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace","Wood"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO"],"NewConstructionYN":false,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":2,"OriginalListPrice":724357,"AssociationFee2":217,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors","Energy efficient windows","Energy efficient stove"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/18.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969aa","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969aa","ShortDescription":"Sollers tertius volup adamo consequatur."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/08.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969ab","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969ab","ShortDescription":"Acies adaugeo vulgo."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/20.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969ac","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969ac","ShortDescription":"Id damno ceno tutamen."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/19.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969ad","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969ad","ShortDescription":"Synagoga vado libero."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/01.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969ae","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969ae","ShortDescription":"Decimus provident explicabo clamo."},{"Order":6,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/16.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969af","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969af","ShortDescription":"Aspicio cicuta rerum."},{"Order":7,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/30.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f2969b0","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f2969b0","ShortDescription":"Curia celer libero perspiciatis uberrime."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"Maine","OriginalEntryTimestamp":"2019-07-22T21:40:01.309Z","BuildingFeatures":["Elevator","Gym","Patio/Rooftop Deck","Cafeteria","Concierge Service"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Sole P","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Fuga voluptas omnis nulla et sed voluptas molestiae. Impedit necessitatibus ut et voluptatibus. Quae accusamus similique et quod inventore eum nihil.","CopyrightNotice":"Ullam totam eos illo ipsa quasi. Veritatis quam ut suscipit ipsam ipsa nihil quisquam velit. Sunt aperiam tempore voluptatem. Eum illo labore accusantium molestiae. Porro illo sint cupiditate nobis.\n \r\tSuscipit non rerum et laboriosam aut corporis consequatur. Porro quaerat non omnis officiis omnis. Magni repellendus error expedita ad.","ShowingContactName":"Macey Travis Breitenberg","MobileDimUnits":null,"LotFeatures":[],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"36344-6205","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":175,"BuyerOfficeName":null,"AssociationFee":223,"LeaseAmount":null,"LotSizeSquareFeet":1365,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Arkansas","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["quaerat"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":null,"OpenParkingSpaces":2,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fb94aa4055b9f29699f')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Aut iusto ad et dolore neque. Exercitationem cumque vero corrupti quo. Quis mollitia totam sed eveniet et sed. Error consequatur delectus laboriosam ex quo maiores corrupti atque.\n \r\tQui pariatur nostrum et qui aliquam vel. Dolores est velit tempore dolor nobis omnis aspernatur. Non optio maiores iure et pariatur.","LockBoxLocation":"Iusto non eos dolorem ad. Autem autem voluptates cum nulla quas. Iusto ullam ipsa necessitatibus animi perferendis.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-07-21","LaundryFeatures":["In Kitchen","Gas Dryer Hookup"],"Flooring":["Hardwood","Laminate","Vinyl","Tiles","Cork"],"PhotosCount":5,"FireplacesTotal":3,"ListTeamKey":null,"AdditionalParcelsYN":false,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":false,"SeniorCommunityYN":true,"Cooling":[],"ExteriorFeatures":["Balcony"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:45.625Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Qui in voluptate optio qui sint laboriosam vel. Quisquam impedit rerum voluptatem qui quaerat accusamus culpa. Quibusdam quidem labore aut nam quod ipsam voluptatem. Doloremque qui tempora ab et consequatur. Et voluptas laudantium omnis sit eveniet.\n \r\tQuam molestiae possimus atque at dolores aut accusamus. Ullam occaecati itaque adipisci. Et ex quo assumenda.\n \r\tNon deserunt saepe et odio vel sint fugiat nesciunt. Commodi quos at perferendis corrupti voluptates quis quam. Libero enim modi rerum quibusdam eaque amet natus. Omnis eum voluptas non vero ducimus. In error illo quidem facilis nemo ea.\n \r\tUt tempora ex et. Ipsa qui enim id optio sed deleniti similique aut. Soluta est autem hic atque aperiam dicta. Nihil iure voluptatem et. Aut id sapiente et libero impedit voluptatum id eaque.","DocumentsCount":6,"CancelationDate":null,"AssociationName":"dicta","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Dr. Katharina Rohan Bldg","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Bi-Monthly","CrossStreet":null,"OccupantPhone":"971-920-5415 x1671","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":7492,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal","Oven"],"MLSAreaMajor":null,"TaxAnnualAmount":150805,"LandLeaseAmount":null,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Residential","BathroomsTotalDecimal":7.75,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":true,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":"343","GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fb94aa4055b9f29699f","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":null,"CommonWalls":["2+ Common Walls","No One Below","No One Above","No Common Walls"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Seller"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Lemke Group","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Vallie","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Facilis rerum aut voluptatibus aut qui nisi. Ipsam blanditiis ea fugiat. Nemo hic tempore neque eum. Beatae officiis nihil vel eius expedita ut cumque. Aut at minima blanditiis.\n \r\tPerspiciatis sint dolores tempore quod. Quae illum distinctio voluptatem nesciunt. Ullam voluptatem omnis et non voluptas.","Concessions":"Yes","AttachedGarageYN":false,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal"],"BuyerAgentNamePrefix":null,"ParkingTotal":4,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Kiehn-Stamm","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":["Close of Escrow","Close Plus 1 Day","Close Plus 2 Days","Close Plus 3 Days","Close Plus 3 to 5 Days","Close Plus 30 Days"],"CoListAgentOfficePhone":null,"WaterfrontYN":true,"BathroomsFull":1,"LotSizeAcres":6,"SubdivisionName":"quaerat","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":true,"Fencing":["Chain Link","Block","Wire"],"LotSizeSource":"Agent","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Voluptates similique at enim. Dignissimos voluptatem neque dolor sit rerum. Voluptatem nobis nostrum minus et quo. Delectus amet a natus eaque tempora deleniti eum.","FarmCreditServiceInclYN":null,"ListingService":"Limited Service","Elevation":24650,"WaterSource":["Municipal","Irrigation District"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Sliding Doors","French Doors"],"StoriesTotal":3,"YearBuilt":1987,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":7,"CoListOfficeFax":null,"Disclaimer":"Deserunt est maxime velit ab magni. Magni facilis debitis cumque omnis atque qui eum. Mollitia quas nesciunt quo quo velit dignissimos reiciendis quis. Laborum voluptate laboriosam facere.\n \r\tAd temporibus aliquid itaque officia ratione voluptatem. Est consequuntur neque eum est neque. Voluptates dignissimos molestias ducimus.","ZoningDescription":"Agricultural","PreviousListPrice":133289,"LandLeaseYN":false,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":29,"PetsAllowed":["Yes","No"],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Tenant","OtherStructures":[],"AssociationAmenities":["Pool","Clubhouse","Gym"],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-06-24T19:36:07.131Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":7797,"TaxAssessedValue":921286,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"606.530.8560 x6781","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Wood","Boiler"],"StructureType":[],"BuildingAreaSource":"Assessor","BathroomsOneQuarter":2,"BuilderModel":"Small Rubber Gloves","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Candelario","OwnerPays":[],"BedroomsPossible":6,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":[],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Jenkins-Kassulke","ListingId":"5dba1fb94aa4055b9f2969a0","DocumentsChangeTimestamp":null,"CommunityFeatures":[],"ShowingStartTime":null,"BathroomsTotalInteger":11,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":15,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Square Feet","City":"Breitenbergland","OwnerPhone":null,"InternetEntireListingDisplayYN":true,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"North-West","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Wood"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Laney Casimer King","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Laboriosam sit quam sed atque repudiandae itaque in. Eos at possimus distinctio omnis cumque nesciunt voluptas. Eos quia consectetur cumque in quasi quae quidem. Quisquam nisi et enim enim aperiam nobis.\n \r\tMaxime qui sit quaerat mollitia. Delectus praesentium qui qui et. Accusantium qui et autem quo asperiores delectus maiores cum. Recusandae accusantium est ipsum labore dicta.\n \r\tId deserunt magni quasi magni harum omnis ea. A porro tempore ipsum voluptates laudantium est. Vel cumque aperiam beatae. Expedita cupiditate et velit laborum natus minus in aut. Sit odit quo quo.\n \r\tEt aut ex quisquam ex beatae. Distinctio aperiam at eius vero. Quia eligendi magnam temporibus recusandae.","InternetConsumerCommentYN":true,"BuildingAreaTotal":8347912,"YearBuiltSource":"Estimate","OtherEquipment":["Intercom","Central Vacuum Nozzle"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":null,"BedroomsTotal":4,"ShowingInstructions":"Ipsa saepe recusandae minus quas omnis rerum enim neque. Est ut et quam odit vel dolorem delectus numquam. Id ratione nemo debitis cumque.\n \r\tConsectetur ut quia sint et aut voluptas. Doloribus animi vel modi culpa dolor quos ut. Dolorem dicta dignissimos omnis vel. Corporis placeat nisi ut quidem. Perspiciatis assumenda ut nobis tempore deleniti.\n \r\tNecessitatibus nihil sed ut. Veritatis provident nesciunt at non. Qui voluptatem repellat omnis ut.\n \r\tRepellat quas id sequi. Magnam sunt sit a recusandae ut. Vel laudantium aut tempora voluptatibus aut est consequatur. Corrupti accusantium nemo hic eveniet sequi.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":true,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa6a2a50c5b81f08c6d","OnMarketDate":"2019-10-01","CarportSpaces":3,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-04-02","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Meters","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.337053,"AvailabilityDate":"2019-11-06","TaxTract":"Lot 93 of Block 15 of Tract 1464 of Creminborough","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":false,"PublicRemarks":"Doloribus rerum possimus repudiandae ex. Aliquam rerum odit consequatur expedita et vitae aut ut. Quidem excepturi doloribus est molestiae quam nulla est.\n \r\tDeleniti minima eos repudiandae sint illo sed mollitia et. Molestiae ducimus eum in placeat. Nobis distinctio unde voluptas. Neque modi accusamus aut at autem.\n \r\tCommodi porro consequatur eum quia aspernatur. Fuga pariatur laboriosam et similique libero. Et quibusdam rem earum dolore voluptatem velit.\n \r\tDolores ut voluptas quo quam iure nemo necessitatibus. Harum voluptas in exercitationem commodi dolore dolore. Dicta est nam ullam ut non. Ea omnis harum porro soluta et omnis possimus. Aut occaecati assumenda dicta quo.","FinancialDataSource":["Listing Broker","Not Available"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":[],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Washington","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Asphalt"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-07-29T06:37:57.581Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"C-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Assessor","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":7529,"CoBuyerOfficeName":null,"ListOfficeName":"Ritchie and Sons Realty","TaxBlock":"Lot 84 of Block 46 of Tract 3377 of North Haleyborough","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)","Other","Private","Seller Financing","Trust Deed","USDA"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["ratione","qui","incidunt","aliquam"],"BusinessType":["Ice Cream/Frozen Yogurt"],"DualVariableCompensationYN":false,"Latitude":33.960417,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":490386,"RoadFrontageType":[],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":9239356,"DOH3":null,"BelowGradeFinishedAreaSource":"Assessor","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Daily","CoListAgentVoiceMailExt":null,"StateOrProvince":"New Mexico","AboveGradeFinishedAreaUnits":"Square Meteres","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":1,"MiddleOrJuniorSchool":"Swaniawski, Russel and Yundt","AssociationFeeIncludes":["Pest Control"],"CoListAgentMobilePhone":null,"ConcessionsComments":"Front pavement requires fixing","SyndicateTo":["Zillow"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"353","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":[],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb024f","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":3,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-07-16T20:35:53.990Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Vallie Candelario Ritchie","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":1,"PropertyCondition":[],"FrontageType":["Golf Course","Lakefront"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1389","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Slurry"],"View":["View","Lake View"],"SignOnPropertyYN":true,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Illum id eos illo dignissimos esse earum. Dolores eos a quam fugit. Inventore qui quam commodi corrupti dolorem et recusandae commodi.","BuyerAgentPager":null,"HighSchool":"Tromp, Prohaska and Beahan","LeaseConsideredYN":true,"HomeWarrantyYN":false,"Levels":["One Level","Two Level","Split Level","Three or More Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Ritchie","ListAgentURL":null,"InteriorFeatures":["Voluptatem soluta pariatur qui officia sit corrupti suscipit. Et molestiae incidunt excepturi. Non nihil expedita quos. Architecto et velit dignissimos."],"LockBoxType":["Dicta aliquam quisquam harum. Rerum illo veniam porro reprehenderit id ut deserunt. Molestias dolorem et non voluptatem non. Labore perspiciatis placeat et voluptas. Qui id velit perferendis."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2019-02-09","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa6a2a50c5b81f08c6e","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"906 x 725 x 741 x 762","ModificationTimestamp":"2019-05-18T14:26:55.764Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 21 of Block 46 of Tract 4394 of East Ana","BusinessName":"Ondricka, Mosciski and Hamill","BuyerAgentEmail":null,"Coordinates":[-118.337053,33.960417],"AccessCode":"7gmd","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":false,"LotDimensionsSource":"Agent","Country":"US","UnitNumber":"#224","CoListAgentPreferredPhoneExt":null,"OpenParkingYN":false,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb0250","Inclusions":"Voluptatum a qui sed maxime voluptatum labore. Doloremque et aut fuga facere ut dolore. Eum vel id commodi.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"(349) 903-9373","ConcessionsAmount":35333.331373,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Acres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Top Level","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"(870) 520-6155 x9046","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":2,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Yes Connected"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":"Hagenes Rest Vista","ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Assessor","ListOfficeFax":null,"AnchorsCoTenants":"Upton-Gleichner,Hettinger, Stracke and Jaskolski,Roberts-Streich,Shields-Dickinson,Reichert Group","PatioAndPorchFeatures":[],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"Graysontown","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"h0bat0jiguzrtv9brc0wmg8md","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One"],"WindowFeatures":[],"SpecialListingConditions":["Standard"],"NewConstructionYN":false,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":4,"OriginalListPrice":360310,"AssociationFee2":391,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/05.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29699a","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29699a","ShortDescription":"Victoria est contigo."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/19.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29699b","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29699b","ShortDescription":"Terra suspendo contra."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/15.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29699c","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29699c","ShortDescription":"Super sortitus coruscus corrigo ut."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/06.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29699d","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29699d","ShortDescription":"Atrocitas decens adipiscor."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/31.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29699e","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29699e","ShortDescription":"Acidus aduro depromo pecus cribro."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":["Elevator"],"FarmLandAreaSource":null,"HighSchoolDistrict":"Connecticut","OriginalEntryTimestamp":"2019-10-01T00:20:43.280Z","BuildingFeatures":["Concierge Service"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Partnership","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Asperiores numquam cupiditate sit. Quia nemo reprehenderit aliquam non non voluptatibus delectus. Voluptatem laudantium sunt accusamus ut qui sunt. Quos praesentium voluptate rerum.","CopyrightNotice":"Voluptatem dolor aliquid non nostrum necessitatibus. Incidunt voluptates et ad unde similique voluptas. Est numquam aliquam hic pariatur est est. Culpa a aspernatur aut ea. Et et commodi autem molestiae qui dolore sapiente doloremque.\n \r\tPerferendis voluptates aliquid et doloremque ab. Reprehenderit sint voluptas ex inventore quod sunt est. Magnam quia esse laboriosam aut rerum. Perferendis iure ipsa nam.","ShowingContactName":"Albert Koby Zieme","MobileDimUnits":null,"LotFeatures":["ipsa","incidunt","nesciunt","quis","ut","suscipit","qui","ea","deleniti"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"72574","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":199,"BuyerOfficeName":null,"AssociationFee":422,"LeaseAmount":null,"LotSizeSquareFeet":1541,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Colorado","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["in","a","aut","ea","soluta","iure","magni"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":"#224 343 Hagenes Rest Vista, Breitenbergland, New Mexico 72574","OpenParkingSpaces":null,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fb94aa4055b9f296983')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Esse nemo sed rerum quam occaecati cum. Inventore eum at sit. Sit voluptatum molestiae consequatur voluptatem.\n \r\tSint ratione quis totam. Quis ut voluptate eum repudiandae eos laboriosam. Vero sunt fugiat officiis quia. Aut voluptatem fugit iste repudiandae suscipit ad autem. Velit non qui adipisci expedita exercitationem.","LockBoxLocation":"Unde iste optio libero debitis natus autem omnis magnam. Eos iure atque consequuntur rerum. Occaecati vitae provident aspernatur deserunt aut unde facilis eveniet. Sed pariatur tempora harum est perspiciatis enim quos.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-02-11","LaundryFeatures":["In Kitchen","Gas Dryer Hookup","Washer"],"Flooring":["Hardwood","Laminate","Vinyl"],"PhotosCount":9,"FireplacesTotal":4,"ListTeamKey":null,"AdditionalParcelsYN":true,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":true,"SeniorCommunityYN":true,"Cooling":[],"ExteriorFeatures":["Balcony","Fenced Yard"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:45.618Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Laborum corporis aliquam alias aut quasi repellendus officia mollitia. Ut omnis animi facere odit modi placeat ut dolores. Consequuntur facilis sunt ut qui. Omnis dolor exercitationem est.\n \r\tNihil quas sint aut non officiis quos. Repellendus id animi cum non dolores asperiores quis ipsa. Qui exercitationem aut sed et ipsum voluptatem aliquam. Molestias porro quidem rerum sapiente repellendus iusto.\n \r\tExpedita earum quia sed sequi fuga. Consectetur delectus non veniam molestias. Voluptatum vitae asperiores quo.\n \r\tPariatur soluta dolore vel velit mollitia saepe magnam. Id molestiae magnam est omnis. Eligendi nesciunt sunt et.","DocumentsCount":3,"CancelationDate":null,"AssociationName":"odio","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Mr. Tanya Baumbach Bldg","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Weekly","CrossStreet":null,"OccupantPhone":"620-832-7422 x0873","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":6575,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal","Oven","Microwave"],"MLSAreaMajor":null,"TaxAnnualAmount":768562,"LandLeaseAmount":null,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Residential","BathroomsTotalDecimal":9.25,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":true,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":"354","GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fb94aa4055b9f296983","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":"(689) 722-5500","CommonWalls":["1 Common Wall","No One Above","2+ Common Walls","End Unit"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Agent"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Sporer, Deckow and Beatty","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Lamont","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Tenetur molestiae aliquid est perspiciatis. Qui sunt ipsam quo et odio ut. Consequuntur voluptatem sequi necessitatibus eum.\n \r\tNulla dolorem laudantium aut libero quis. Porro quibusdam quis ut amet. Nisi possimus est voluptas incidunt qui. Et nisi et minus consectetur unde.","Concessions":"No","AttachedGarageYN":true,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel","Composite"],"BuyerAgentNamePrefix":null,"ParkingTotal":3,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":["Cash"],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Jacobi-Gibson","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":[],"CoListAgentOfficePhone":null,"WaterfrontYN":true,"BathroomsFull":6,"LotSizeAcres":6,"SubdivisionName":"in","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":true,"Fencing":["Block","Wood","Wire"],"LotSizeSource":"Assessor","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Deserunt sint autem aut est. Vitae quia minus quis. Expedita adipisci odio dolorem omnis. Aliquam non nisi soluta aut est aut. Illo unde non corrupti est sed corrupti.","FarmCreditServiceInclYN":null,"ListingService":"Limited Service","Elevation":97741,"WaterSource":["Municipal"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Truck Doors","Overhead Doors","French Doors","Glass Doors","Sliding Doors"],"StoriesTotal":3,"YearBuilt":1944,"ElectricOnPropertyYN":null,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":5,"CoListOfficeFax":null,"Disclaimer":"Quis dolore alias quis id. Dolorem ducimus vero nihil et. Omnis rerum quisquam accusamus quam impedit nostrum animi. Ipsum incidunt impedit repudiandae aut et illum. Et quod quis non mollitia et molestias.\n \r\tConsequatur necessitatibus velit harum ea consequatur cumque ut at. Libero esse nemo voluptate quia dolorem repellat. Ut repudiandae laborum blanditiis similique.","ZoningDescription":"Rezone Possible","PreviousListPrice":488442,"LandLeaseYN":false,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":228,"PetsAllowed":["Yes","No","Call"],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Owner","OtherStructures":["aspernatur","eveniet","tenetur","quisquam","et","cupiditate"],"AssociationAmenities":[],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-04-17T03:42:16.222Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":7133,"TaxAssessedValue":248871,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"1-214-283-9217 x2094","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Wood","Heat Pump","Boiler"],"StructureType":[],"BuildingAreaSource":"Agent","BathroomsOneQuarter":2,"BuilderModel":"Incredible Wooden Pants","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Kobe","OwnerPays":[],"BedroomsPossible":7,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Mayert-Kuphal","ListingId":"5dba1fb94aa4055b9f296984","DocumentsChangeTimestamp":null,"CommunityFeatures":["consequuntur","sint","rem","reiciendis"],"ShowingStartTime":null,"BathroomsTotalInteger":12,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":8,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Acres","City":"Brownburgh","OwnerPhone":null,"InternetEntireListingDisplayYN":true,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"North","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Concrete"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Robb Carlotta Schultz","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Quibusdam quam vero consequuntur praesentium adipisci. Doloribus illo placeat dicta. Sunt vero natus sint aut quibusdam rerum nihil et. Non blanditiis sunt odio numquam.\n \r\tCommodi enim quia saepe esse. Dolorem adipisci eum rem repellendus. Similique ut est nulla repellat sint eius.\n \r\tNumquam aut consequatur maxime voluptatum eius non ut. Alias consequatur voluptatum aut labore ducimus. Nisi beatae explicabo amet velit magni aut atque. Velit aspernatur occaecati nesciunt placeat vero.\n \r\tDoloremque cumque laboriosam deleniti reprehenderit necessitatibus recusandae vitae. Qui odit quia voluptas. Eos et delectus qui. Facere quam alias distinctio aut sunt unde.","InternetConsumerCommentYN":true,"BuildingAreaTotal":4793486,"YearBuiltSource":"Agent","OtherEquipment":["Satellite Dish"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":null,"BedroomsTotal":4,"ShowingInstructions":"Molestiae voluptatem maiores harum odio officiis porro fugit. Autem ab ut quia. Possimus consequatur nam minima officia rem.\n \r\tNon nobis rerum recusandae delectus voluptate. Impedit incidunt quisquam illo amet aperiam corrupti. Earum dignissimos in enim eveniet accusantium.\n \r\tMinima reiciendis id exercitationem et. Ut vero dicta excepturi aut nostrum. Magnam quaerat esse repellendus delectus sed et autem doloremque. Vel quos quasi est soluta qui rerum veritatis.\n \r\tCupiditate animi recusandae dolorem aut repudiandae aut. Corrupti officia labore repellendus. Est dolore cum expedita et rerum.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":true,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa5a2a50c5b81f084fd","OnMarketDate":"2019-03-16","CarportSpaces":3,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-02-21","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Feet","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.330199,"AvailabilityDate":"2020-01-24","TaxTract":"Lot 66 of Block 97 of Tract 1898 of Jazminshire","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":false,"PublicRemarks":"Quod ab explicabo assumenda illo atque officiis facilis. Corrupti eaque voluptatem in ut. Cupiditate aut eos earum perspiciatis et ab ut.\n \r\tCorporis repellendus nulla blanditiis placeat repellat voluptas. Et porro placeat voluptates deserunt eligendi voluptates quis. Libero possimus nulla cupiditate repellat cum dolores. Voluptas aspernatur dolor accusantium animi vitae ea beatae est. Ab commodi placeat et molestiae numquam optio occaecati culpa.\n \r\tProvident qui voluptas recusandae et et dolor alias non. Dolor repellendus inventore magni ut et. Voluptas et delectus illo non odit fuga. Necessitatibus esse vero necessitatibus architecto autem ut. Veritatis sunt ex ea qui id.\n \r\tSit quidem tenetur autem aliquam fuga ut distinctio. Molestiae consequatur rerum quam et saepe cupiditate dolor fugit. Quo et explicabo sunt perspiciatis corrupti dolorem inventore. Odit nulla quo modi dolorem pariatur iure eveniet.","FinancialDataSource":["Listing Broker"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":[],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Illinois","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Granite"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-06-09T13:47:58.699Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"C-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Agent","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":2109,"CoBuyerOfficeName":null,"ListOfficeName":"Spencer-Leannon Realty","TaxBlock":"Lot 10 of Block 56 of Tract 3805 of Majortown","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["et","quia","maiores","minima","possimus"],"BusinessType":["Bar/Tavern/Lounge"],"DualVariableCompensationYN":false,"Latitude":33.52022,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":800628,"RoadFrontageType":[],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":3148736,"DOH3":null,"BelowGradeFinishedAreaSource":"Assessor","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Daily","CoListAgentVoiceMailExt":null,"StateOrProvince":"Alaska","AboveGradeFinishedAreaUnits":"Square Feet","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":2,"MiddleOrJuniorSchool":"Dach and Sons","AssociationFeeIncludes":["Sewer","Security","Pest Control","Trash","Earthquake Insurance"],"CoListAgentMobilePhone":null,"ConcessionsComments":"Dryer is broken","SyndicateTo":["Zillow"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"340","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":[],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb027f","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":1,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-03-01T03:13:08.418Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Lamont Kobe D'Amore","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":1,"PropertyCondition":[],"FrontageType":[],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1819","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Mat"],"View":["View"],"SignOnPropertyYN":false,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Est omnis quia aliquid vitae. Quas voluptas qui ab nisi consequatur. Natus voluptatem ut sequi ut libero. Ut culpa quia qui ut nihil ad corrupti exercitationem. Non illo non dolores cum magnam eius a et.","BuyerAgentPager":null,"HighSchool":"Sanford, Zboncak and Conn","LeaseConsideredYN":true,"HomeWarrantyYN":false,"Levels":["One Level","Two Level","Split Level","Three or More Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"D'Amore","ListAgentURL":null,"InteriorFeatures":["Est beatae neque itaque dolorem sed exercitationem. Vel ex aliquam sint nobis. Cupiditate soluta et dolorem. Autem nemo quas ut. Est porro sed laboriosam."],"LockBoxType":["Itaque et sed dolorem nisi eos sint. Dolor ea deleniti tempore et aspernatur. Dicta non qui possimus ullam quisquam beatae quia et."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2019-10-26","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa5a2a50c5b81f084fe","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"150 x 878 x 633 x 465","ModificationTimestamp":"2019-06-27T23:18:25.245Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 54 of Block 67 of Tract 3480 of Pricemouth","BusinessName":"Mosciski-Gleason","BuyerAgentEmail":null,"Coordinates":[-118.330199,33.52022],"AccessCode":"i3uh","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":false,"LotDimensionsSource":"Estimate","Country":"US","UnitNumber":"#290","CoListAgentPreferredPhoneExt":null,"OpenParkingYN":false,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb0280","Inclusions":"Aliquid amet asperiores est. Rerum ratione qui ea et quasi fuga reprehenderit aut. Earum sed voluptas aliquam ad.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"1-557-039-9581","ConcessionsAmount":89342.066873,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Feet","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Ground Level w/o Steps","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"1-347-330-7380 x8768","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":2,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":"Toni Falls Club","ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Agent","ListOfficeFax":null,"AnchorsCoTenants":"Powlowski-Flatley,Trantow-Muller,Rolfson-Schulist","PatioAndPorchFeatures":["ab","sint","aut","voluptates","aliquam","excepturi","consequuntur"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"Port Deehaven","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"n7h2ywwpndi1gkl3wmokw0hzy","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO"],"NewConstructionYN":false,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":4,"OriginalListPrice":548874,"AssociationFee2":472,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors","Energy efficient windows"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/32.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29697a","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29697a","ShortDescription":"Eum catena accedo magni."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/21.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29697b","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29697b","ShortDescription":"Vero ventus deficio clam tremo."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/08.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29697c","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29697c","ShortDescription":"Terminatio sulum rem vester usque tergum."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/30.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29697d","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29697d","ShortDescription":"Corroboro circumvenio sustineo volva."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/06.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29697e","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29697e","ShortDescription":"Provident tot sumo stips alioqui."},{"Order":6,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/07.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29697f","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29697f","ShortDescription":"Triduana desino vita capio complectus annus."},{"Order":7,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/10.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296980","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296980","ShortDescription":"Assumenda color quisquam sortitus."},{"Order":8,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/09.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296981","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296981","ShortDescription":"Audacia patior conculco ipsa."},{"Order":9,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/16.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296982","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296982","ShortDescription":"Magnam dolores surculus."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"Ohio","OriginalEntryTimestamp":"2019-03-24T22:21:42.095Z","BuildingFeatures":["Concierge Service","Elevator","Patio/Rooftop Deck"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Sole P","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Quisquam enim eum et corporis qui ea nostrum. Culpa impedit quod enim omnis totam dolores ducimus. Velit iure velit non vitae maiores eveniet dolorem. Sunt ratione est perspiciatis facere veritatis omnis. Ipsa architecto suscipit aut voluptatem consequatur.","CopyrightNotice":"Pariatur laudantium architecto consequatur perferendis. Aut sit ut quas quidem quaerat nihil enim autem. Praesentium rerum porro accusantium odio dolores accusamus. Ex facilis accusantium non sapiente impedit nam ea molestiae. Dolores veniam voluptatem vitae rerum non praesentium.\n \r\tDolore eum aliquid consequatur fuga optio omnis ab. Ab cumque molestiae maxime expedita illo in reprehenderit. Quis voluptas consequatur placeat quo consequatur. Optio ut officia porro veritatis laudantium voluptatem. Magni dolorem dolorem provident ab architecto quis qui vel.","ShowingContactName":"Esther Olin Wisozk","MobileDimUnits":null,"LotFeatures":["natus","velit","aut"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"63014","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":111,"BuyerOfficeName":null,"AssociationFee":321,"LeaseAmount":null,"LotSizeSquareFeet":1078,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Vermont","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["ducimus"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":"#290 354 Toni Falls Club, Brownburgh, Alaska 63014","OpenParkingSpaces":0,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fb94aa4055b9f29695b')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Sunt vel veritatis laborum ea magnam in similique. Voluptatem aut libero saepe sint. Vel beatae in aut in totam id qui. Ut esse reprehenderit facilis error. Debitis dolorem perferendis consectetur quasi aut officiis voluptas.\n \r\tEnim enim vel amet illum neque ex. Quam velit qui soluta voluptas facilis aut sit. Recusandae molestiae nam et consequatur eaque accusantium. Ratione tenetur commodi maxime explicabo qui quia.","LockBoxLocation":"Sed earum rerum incidunt cumque rem magnam et occaecati. Quisquam natus quia maxime placeat veritatis laudantium non. Non quis distinctio asperiores tempore. Fugit animi totam voluptatem iusto.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-09-08","LaundryFeatures":["In Kitchen"],"Flooring":["Hardwood","Laminate","Vinyl","Tiles"],"PhotosCount":5,"FireplacesTotal":2,"ListTeamKey":null,"AdditionalParcelsYN":false,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":true,"SeniorCommunityYN":false,"Cooling":["Evaporative Cooler","Ceiling Fan"],"ExteriorFeatures":[],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:45.608Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Pariatur iure sequi optio error veniam iusto. Vero fugiat nihil et consequatur. Illo quo cum eveniet illum culpa totam. Ullam repellat aliquid sed voluptas voluptatum exercitationem. Quia laboriosam fugiat animi accusamus aut.\n \r\tSed dolorem porro distinctio. Incidunt ducimus ullam dicta officia. Sed et minima dignissimos ut. Enim praesentium quo tenetur aut nostrum est. Pariatur veniam quibusdam eos voluptatem eum ullam vel.\n \r\tNon sit sunt mollitia qui. Doloribus quod iste vel vero quae hic. Ut culpa eaque et et sunt. Laudantium ratione animi et. Quo velit inventore iste praesentium pariatur dolor illo.\n \r\tEa quia molestias omnis aut laudantium. Quod sed aut minus. Aut quis sunt consequatur.","DocumentsCount":0,"CancelationDate":null,"AssociationName":"corporis","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Kimberly Armstrong Co","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Weekly","CrossStreet":null,"OccupantPhone":"508.571.8735 x9623","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":8540,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal","Oven"],"MLSAreaMajor":null,"TaxAnnualAmount":239924,"LandLeaseAmount":36638534024,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Residential","BathroomsTotalDecimal":10.75,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":"216","GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fb94aa4055b9f29695b","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":null,"CommonWalls":["No One Below","End Unit","No Common Walls","2+ Common Walls","No One Above"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Seller"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Corkery Inc","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Haley","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Ab nam officiis at. Qui aliquam facilis praesentium est. Sint praesentium ut repellendus ea deserunt qui quia. Sed molestiae quasi pariatur rerum consequatur magnam dolor est. Natus dignissimos repellendus id.\n \r\tQui cupiditate sunt odit magni iste. Dicta sed vero tempore sunt. Debitis corporis earum rerum voluptas omnis ex.","Concessions":null,"AttachedGarageYN":true,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel"],"BuyerAgentNamePrefix":null,"ParkingTotal":3,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":["Cash"],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Douglas LLC","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":["Close of Escrow","Close Plus 1 Day","Close Plus 2 Days","Close Plus 3 Days","Close Plus 3 to 5 Days","Close Plus 30 Days"],"CoListAgentOfficePhone":null,"WaterfrontYN":false,"BathroomsFull":1,"LotSizeAcres":8,"SubdivisionName":"earum","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":true,"Fencing":["Wood"],"LotSizeSource":"Assessor","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Expedita quia eum quaerat et cumque eum sed. Voluptatem iste similique fugiat sunt iure. Corrupti nobis natus velit optio sint sunt at.","FarmCreditServiceInclYN":null,"ListingService":"Limited Service","Elevation":93022,"WaterSource":["Municipal"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Overhead Doors","Sliding Doors","Truck Doors","French Doors","Glass Doors"],"StoriesTotal":3,"YearBuilt":1980,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":9,"CoListOfficeFax":null,"Disclaimer":"Illo perspiciatis sit ut quia aspernatur non. Provident aut aut et velit. Ipsam sed ex explicabo et. Culpa qui consequatur commodi voluptatum eveniet illum. Et aut non velit commodi.\n \r\tFuga quas in ducimus quos ut. Laudantium culpa hic veniam unde repudiandae alias. Accusantium vel fuga ea ut deserunt corrupti voluptatem. Provident laudantium animi et omnis sit.","ZoningDescription":"Agricultural","PreviousListPrice":123699,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":256,"PetsAllowed":["Yes","No","Call","Cats OK","Dogs OK","Number Limit"],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Owner","OtherStructures":["et","asperiores","maiores","eum","veniam","minima","explicabo","sint","veniam"],"AssociationAmenities":[],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-03-24T19:54:25.888Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":4236,"TaxAssessedValue":729415,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"918-631-1956 x6448","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Electric","Heat Pump","Forced Air"],"StructureType":[],"BuildingAreaSource":"Assessor","BathroomsOneQuarter":2,"BuilderModel":"Gorgeous Plastic Gloves","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Martina","OwnerPays":[],"BedroomsPossible":8,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":[],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Wisozk, Wintheiser and Casper","ListingId":"5dba1fb94aa4055b9f29695c","DocumentsChangeTimestamp":null,"CommunityFeatures":["et","voluptatibus","voluptatem"],"ShowingStartTime":null,"BathroomsTotalInteger":15,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":15,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Square Meteres","City":"South Arianna","OwnerPhone":null,"InternetEntireListingDisplayYN":true,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"South-East","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Wood"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Emory Hilbert Wiegand","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Ipsa ut nam reprehenderit non magnam. Dicta doloribus aperiam cumque qui soluta consequuntur magnam. Iure nesciunt perferendis omnis eos culpa nulla.\n \r\tSapiente expedita magni tenetur alias. Modi et est at doloremque aliquid deleniti voluptas. Aperiam voluptatem et molestiae consectetur dignissimos ex qui.\n \r\tNatus maiores veniam possimus ipsa aliquid exercitationem dolores aliquam. Et ut explicabo voluptates accusamus. Et expedita labore in perspiciatis enim nulla consequuntur. Expedita ut ut illum sit dolores in.\n \r\tNatus voluptas atque harum fugit aut unde. Mollitia non accusamus sed distinctio aut aperiam. Numquam qui unde quia debitis aliquid totam non totam. Maxime corrupti illum alias alias qui ut commodi. Voluptate vero et velit vel in labore expedita.","InternetConsumerCommentYN":true,"BuildingAreaTotal":258644,"YearBuiltSource":"Estimate","OtherEquipment":["Intercom","TV Antenna"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"Monthly","BedroomsTotal":4,"ShowingInstructions":"Harum ea sunt nobis nisi quos eos. Esse quisquam unde provident ipsa ullam reiciendis aut. Non et illum quia ut ut amet.\n \r\tDolores necessitatibus itaque mollitia et ut eligendi esse. Et earum quis et expedita. Omnis dolore vitae veritatis aliquam est.\n \r\tQuas inventore ducimus excepturi. Minima magnam libero quae reiciendis autem qui. Sint rerum consequatur libero qui aut vel laborum asperiores. Quo quibusdam voluptatibus non voluptas dolore. Reprehenderit explicabo velit atque.\n \r\tMolestiae quae amet iusto nihil. Velit voluptatum provident enim quibusdam. Vitae rem maiores qui molestias et. Pariatur quis voluptates quibusdam magnam. Culpa labore nihil vero est placeat alias ut temporibus.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":true,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa4a2a50c5b81f08271","OnMarketDate":"2019-02-16","CarportSpaces":1,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-03-14","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Meters","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.331656,"AvailabilityDate":"2020-01-25","TaxTract":"Lot 97 of Block 75 of Tract 1757 of Padbergbury","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":true,"PublicRemarks":"Molestias ut perspiciatis sed non deserunt. Asperiores porro corporis et id fuga quam libero. Eveniet voluptatem rerum id corrupti modi et numquam aliquam.\n \r\tDolore cumque esse placeat ex consequatur. Quisquam a quidem laborum qui aliquam soluta dolor. Excepturi possimus dolorem et. Doloremque sed aperiam nisi voluptas architecto dolores praesentium.\n \r\tOmnis illum deserunt facere animi minima. Dolorem quo omnis odio qui. Blanditiis architecto voluptatum mollitia dolorem et dolore non atque.\n \r\tModi ab optio neque optio reiciendis. Omnis quae hic ullam. Natus enim enim mollitia dolore optio.","FinancialDataSource":["Listing Broker","Not Available"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)","Other"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Colorado","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Dirt"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-05-07T07:45:19.443Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"C-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Agent","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":9518,"CoBuyerOfficeName":null,"ListOfficeName":"Kris-Pfannerstill Realty","TaxBlock":"Lot 18 of Block 12 of Tract 2684 of Lake Aniyahaven","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["minima","est"],"BusinessType":["Professional Service"],"DualVariableCompensationYN":true,"Latitude":34.051712,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":259985,"RoadFrontageType":["Freeway frontage"],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":7227865,"DOH3":null,"BelowGradeFinishedAreaSource":"Assessor","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Annually","CoListAgentVoiceMailExt":null,"StateOrProvince":"New York","AboveGradeFinishedAreaUnits":"Square Meteres","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":4,"MiddleOrJuniorSchool":"Barrows LLC","AssociationFeeIncludes":["Electricity","Maintenance Exterior","Maintenance Grounds","Pest Control","Earthquake Insurance","Insurance","Security","Utilities","Sewer","Cable TV","Snow Removal","Water","Trash"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow","Trulia","hotspads.com"],"VirtualTourURLUnbranded":null,"Gas":["Available"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"488","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":["Bylaw Infractions"],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb029d","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":3,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-10-06T16:40:36.362Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Haley Martina Nitzsche","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":2,"PropertyCondition":[],"FrontageType":["Golf Course"],"Stories":1,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1913","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Well"],"View":["View","Lake View"],"SignOnPropertyYN":false,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Cupiditate unde excepturi animi blanditiis unde cum reprehenderit. Beatae asperiores ducimus aut. Quisquam sunt pariatur nisi placeat vel. Aut ratione numquam vel ratione consequatur. Accusantium quo quod eligendi earum sunt repellat at.","BuyerAgentPager":null,"HighSchool":"Jast, Bruen and Deckow","LeaseConsideredYN":false,"HomeWarrantyYN":false,"Levels":["One Level","Two Level","Split Level","Three or More Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Nitzsche","ListAgentURL":null,"InteriorFeatures":["Aut rerum rerum sit. Laborum autem esse qui culpa. Eum ipsum ut amet fugiat."],"LockBoxType":["Ut eligendi molestias quia doloremque libero est. Labore quo nihil eius odio molestias. Omnis dolores numquam sit. Ipsam deserunt rerum amet."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2018-12-29","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa4a2a50c5b81f08272","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"787 x 832 x 803 x 745","ModificationTimestamp":"2019-08-23T02:09:21.397Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 88 of Block 15 of Tract 2166 of Freedafort","BusinessName":"Eichmann-Bailey","BuyerAgentEmail":null,"Coordinates":[-118.331656,34.051712],"AccessCode":"mprm","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":true,"LotDimensionsSource":"Agent","Country":"US","UnitNumber":"#170","CoListAgentPreferredPhoneExt":null,"OpenParkingYN":true,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb029e","Inclusions":"Commodi ipsum aperiam repellat ut possimus iste aut. Qui aliquam at eum deserunt maxime eum. Perferendis voluptatem autem occaecati nisi fugit adipisci voluptas doloremque. Tenetur illo rerum eum ut id eos itaque.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"(169) 370-8743","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Acres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Elevator","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"802-609-1386 x8006","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":4,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":"Pfannerstill Loaf Isle","ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Estimate","ListOfficeFax":null,"AnchorsCoTenants":"Bruen, Wiza and Dare,Glover, Weissnat and McLaughlin","PatioAndPorchFeatures":["exercitationem","suscipit","repellat","necessitatibus","vero","ea"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"East Allanville","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"nxak0b0zodn1knn4nv2dbsehi","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace","Wood","Gas","Two"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO"],"NewConstructionYN":false,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":4,"OriginalListPrice":862142,"AssociationFee2":137,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":[],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/32.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296956","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296956","ShortDescription":"Delectus curtus clementia abstergo."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/27.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296957","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296957","ShortDescription":"Voluptas campana aut custodia viduata."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/13.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296958","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296958","ShortDescription":"Ulterius vestigium quidem eos."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/12.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f296959","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f296959","ShortDescription":"Colo tot tendo cogito patrocinor callide."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/02.jpg","ResourceRecordKey":"ME_KEY_5dba1fb94aa4055b9f29695a","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fb94aa4055b9f29695a","ShortDescription":"Caritas non omnis."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"North Carolina","OriginalEntryTimestamp":"2019-01-12T15:55:39.059Z","BuildingFeatures":["Concierge Service","Gym","Elevator"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Partnership","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Veniam omnis debitis est sit qui nulla consequatur voluptas. Tempora deleniti nobis voluptatem cupiditate adipisci rem. Possimus quos et ipsum quo.","CopyrightNotice":"Ut sunt ea exercitationem vel assumenda. Magnam molestiae aut voluptatem ducimus rerum velit. Quaerat excepturi autem sint consequuntur rerum. Et dicta odit quasi accusamus enim impedit. Labore laudantium et voluptas veritatis molestias.\n \r\tVoluptatibus deserunt numquam et alias earum quia quo. Architecto error sit recusandae consequuntur. Incidunt laborum et aliquid aut assumenda. Quisquam quod veniam id quo omnis delectus.","ShowingContactName":"Elisa Lea Crona","MobileDimUnits":null,"LotFeatures":["mollitia","omnis","deleniti","nihil","natus"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"16512-4115","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":132,"BuyerOfficeName":null,"AssociationFee":217,"LeaseAmount":null,"LotSizeSquareFeet":1980,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Georgia","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["voluptates","exercitationem","alias","et"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":[],"UnparsedAddress":"#170 216 Pfannerstill Loaf Isle, South Arianna, New York 16512-4115","OpenParkingSpaces":2,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fba4aa4055b9f296a94')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Vel ex veritatis consectetur. Odit aliquid aspernatur omnis vel sint laboriosam rem id. Est aut aut impedit adipisci qui necessitatibus consequatur.\n \r\tAlias et quidem deserunt fuga totam qui neque sit. Quae error omnis quia quos. Et dolorem consectetur ut itaque possimus illum velit. Eveniet rerum alias quos reprehenderit magnam.","LockBoxLocation":"Eos nihil asperiores perspiciatis. Qui fuga qui nisi ea delectus molestias eius. Dolores consequuntur dolor sapiente impedit. Consequatur inventore aut tempora autem odio totam. Quas libero eius quia velit.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-05-23","LaundryFeatures":["In Kitchen","Gas Dryer Hookup","Washer"],"Flooring":["Hardwood","Laminate"],"PhotosCount":5,"FireplacesTotal":4,"ListTeamKey":null,"AdditionalParcelsYN":true,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":true,"SeniorCommunityYN":true,"Cooling":["Evaporative Cooler","Ceiling Fan"],"ExteriorFeatures":[],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:46.207Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Autem hic consequatur debitis cupiditate rerum exercitationem. Fugit libero itaque cumque animi aut sed in aut. Ut ab sapiente fuga facere reiciendis saepe.\n \r\tVoluptatem odit esse qui nulla. Nihil eaque necessitatibus ducimus dolorem. Qui sint eum aut laborum.\n \r\tEt culpa assumenda facilis molestiae explicabo eius. At beatae natus explicabo. Qui et sunt soluta qui officia aspernatur eum. Ad enim id amet voluptatem et. Et atque autem velit omnis.\n \r\tAtque amet optio nostrum sed perferendis dolorem. Ipsum distinctio perspiciatis autem. Blanditiis ea minus voluptatem consequatur in. Sit ad aut voluptas. Optio quasi rerum itaque suscipit.","DocumentsCount":6,"CancelationDate":null,"AssociationName":"qui","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Lionel Abshire Plc","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Semi-Monthly","CrossStreet":null,"OccupantPhone":"804.360.0432","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":397,"BuyerAgentFax":null,"MajorChangeType":"Price reduction","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal","Oven","Microwave","Pantry"],"MLSAreaMajor":null,"TaxAnnualAmount":792603,"LandLeaseAmount":48918897268,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Residential","BathroomsTotalDecimal":12.25,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":"162","GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fba4aa4055b9f296a94","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":null,"CommonWalls":["End Unit","1 Common Wall","No One Above"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Agent"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Howell LLC","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Bailey","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Qui perspiciatis nam consequatur. Incidunt dolores dolores ut occaecati voluptates id sunt. Assumenda a inventore nisi optio nemo. Saepe sint quo odit similique. Rerum tempore quo itaque.\n \r\tOmnis dolores debitis officia. Est assumenda et et aliquam tempore quasi. Voluptates tempora necessitatibus aut sapiente quaerat animi iusto eum. Dolores voluptatem molestiae in sint illo.","Concessions":null,"AttachedGarageYN":false,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel"],"BuyerAgentNamePrefix":null,"ParkingTotal":3,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Wisoky-Crooks","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Apartment","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":["Close of Escrow"],"CoListAgentOfficePhone":null,"WaterfrontYN":false,"BathroomsFull":1,"LotSizeAcres":5,"SubdivisionName":"delectus","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":true,"Fencing":["Wire","Wood","Block"],"LotSizeSource":"Agent","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Aut est iure dolores. Magnam aut velit perferendis perspiciatis nihil magnam. Corporis consectetur sint corporis laudantium deleniti est sit. Ut architecto vel doloribus.","FarmCreditServiceInclYN":null,"ListingService":"Full Service","Elevation":55368,"WaterSource":["Municipal","Irrigation District","Private Utility"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Glass Doors","Overhead Doors","French Doors","Sliding Doors","Truck Doors"],"StoriesTotal":3,"YearBuilt":1974,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":10,"CoListOfficeFax":null,"Disclaimer":"Pariatur quas nihil porro voluptatem reprehenderit ratione suscipit. Et corporis deleniti temporibus libero eveniet dolorem facere. Aspernatur possimus consectetur qui quaerat ut. Maxime sit doloremque rerum laborum.\n \r\tDicta natus natus et similique tenetur sunt. Deserunt ut et nam occaecati autem eum perferendis dolorem. Laboriosam ullam qui maxime est saepe quasi. Molestiae nisi voluptatum quia veritatis et. Dolorem in sunt quia repellat commodi qui tenetur consequatur.","ZoningDescription":"Agricultural","PreviousListPrice":560928,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":263,"PetsAllowed":[],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Tenant","OtherStructures":["dolor","incidunt","autem","distinctio","sed"],"AssociationAmenities":["Pool","Clubhouse","Gym"],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-10-28T11:31:33.262Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":8013,"TaxAssessedValue":673131,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"878-978-0759","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Boiler","Electric"],"StructureType":[],"BuildingAreaSource":"Estimate","BathroomsOneQuarter":3,"BuilderModel":"Ergonomic Rubber Car","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Alvina","OwnerPays":[],"BedroomsPossible":6,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Wolf-Bosco","ListingId":"5dba1fba4aa4055b9f296a95","DocumentsChangeTimestamp":null,"CommunityFeatures":["cumque","illo","et","modi"],"ShowingStartTime":null,"BathroomsTotalInteger":17,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":16,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Square Meteres","City":"Kelsiside","OwnerPhone":null,"InternetEntireListingDisplayYN":false,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"North","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Concrete"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Aileen Chadrick Walker","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Iusto doloremque occaecati reprehenderit unde quasi consequatur. Quaerat aut fugit et qui qui. Explicabo nihil saepe deserunt consequatur eaque dignissimos ut. Vitae consectetur non voluptate nesciunt recusandae tenetur. Autem voluptas asperiores veniam et.\n \r\tEt ut porro dolorem ab repudiandae architecto ullam magnam. Reiciendis quis voluptatem inventore laborum in. Sunt est consectetur quia voluptas. Pariatur iste necessitatibus est tenetur ut autem.\n \r\tRepudiandae maiores corporis omnis amet laboriosam. Quia quo repudiandae sunt quia. Aliquam consequatur voluptas iste. Nulla et ad voluptatem quae autem nisi.\n \r\tQuos repudiandae quam id et quibusdam excepturi est. Veritatis voluptas eveniet deserunt perferendis id modi omnis. Quia non aut minima. Iure voluptas nihil quod sed. Exercitationem aut consequatur dicta.","InternetConsumerCommentYN":true,"BuildingAreaTotal":8091643,"YearBuiltSource":"Estimate","OtherEquipment":["Central Vacuum Nozzle"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"One Time","BedroomsTotal":3,"ShowingInstructions":"Velit et exercitationem est. Ab non sint odit enim dolores cupiditate qui. Quaerat quia sint voluptatem dolorum non in sed. Quia molestias voluptate ipsam officia tempora et adipisci minus. Facilis nihil beatae voluptas.\n \r\tDoloribus quod quis fugiat perferendis perferendis saepe fuga. Enim deserunt et reiciendis. Voluptatem occaecati dolorum aut aspernatur nihil assumenda.\n \r\tEst nostrum saepe perspiciatis ad. Voluptatibus eaque quo rem voluptatem ducimus necessitatibus voluptatem eius. Vel voluptatem sed voluptatem.\n \r\tAssumenda possimus non inventore velit. Iure non ipsam error quisquam reprehenderit saepe dolorum dicta. Animi veritatis soluta magnam reprehenderit laboriosam excepturi quia. Et accusamus reiciendis dolor totam et nam laborum dignissimos. Et accusantium deserunt quia sequi amet omnis.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":true,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa5a2a50c5b81f0862d","OnMarketDate":"2019-02-09","CarportSpaces":3,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2018-11-06","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Feet","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":true,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.016384,"AvailabilityDate":"2019-11-02","TaxTract":"Lot 27 of Block 69 of Tract 2713 of East Junior","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":false,"PublicRemarks":"Placeat voluptatibus aut adipisci libero sed ipsum possimus fugiat. Fugiat dolores velit rerum culpa ut alias. Sed voluptatem enim cumque tenetur. Mollitia sint ea aut et. Incidunt et aut sunt.\n \r\tDelectus velit ipsa commodi consequatur beatae. Et porro magnam molestiae nesciunt. Nostrum error omnis vel. Omnis deserunt architecto illo enim eum. Adipisci ut molestiae eveniet.\n \r\tIllo est voluptate rerum non autem et. Assumenda repellat consequuntur possimus rerum. Vel consectetur rerum modi.\n \r\tAut cumque et reprehenderit alias. Placeat ab omnis aliquam consectetur ipsum laboriosam vel. Ut et earum id molestias necessitatibus occaecati amet.","FinancialDataSource":["Listing Broker"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Alabama","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Asphalt"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-10-05T13:48:40.188Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"R-1","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Estimate","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":6332,"CoBuyerOfficeName":null,"ListOfficeName":"Swaniawski Inc Realty","TaxBlock":"Lot 38 of Block 3 of Tract 2690 of Strosinhaven","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["quia","soluta","quia","quibusdam","iure","ad","possimus","odio","et"],"BusinessType":["Clothing"],"DualVariableCompensationYN":false,"Latitude":33.622839,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":586193,"RoadFrontageType":["Freeway frontage"],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":3611154,"DOH3":null,"BelowGradeFinishedAreaSource":"Estimate","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Seasonal","CoListAgentVoiceMailExt":null,"StateOrProvince":"Washington","AboveGradeFinishedAreaUnits":"Square Meteres","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":3,"MiddleOrJuniorSchool":"Braun, Cummings and Hills","AssociationFeeIncludes":["Security"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow"],"VirtualTourURLUnbranded":null,"Gas":["Private LP Tank"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"27","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":[],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb02b2","DistanceToGasNumeric":null,"FireplaceYN":true,"BathroomsThreeQuarter":4,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-04-14T17:36:57.008Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Bailey Alvina Fadel","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":2,"PropertyCondition":[],"FrontageType":["Golf Course","Lakefront"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1938","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Grillage"],"View":["View"],"SignOnPropertyYN":false,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Nam eaque amet non. Nam voluptate saepe error expedita asperiores hic. Vel necessitatibus ab quam illo dolorum ut magnam. Accusamus mollitia eaque incidunt rem sapiente. Itaque beatae beatae veritatis doloribus.","BuyerAgentPager":null,"HighSchool":"Mann-Murphy","LeaseConsideredYN":false,"HomeWarrantyYN":true,"Levels":["One Level","Two Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Fadel","ListAgentURL":null,"InteriorFeatures":["Quis modi quas veritatis sit officiis ad. Ratione sint maiores id assumenda voluptatem in tempora. Laboriosam nihil voluptatem cupiditate nemo. Quod omnis aut quia architecto temporibus eaque ad aliquid. Quisquam rerum ut voluptas veniam accusantium nihil."],"LockBoxType":["Et neque necessitatibus nostrum. Exercitationem voluptate totam rerum numquam quis. Ad placeat qui voluptatibus voluptatem dolorum qui aut. Qui magnam id et et. Porro nobis laboriosam beatae est enim aut sequi."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":null,"ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa5a2a50c5b81f0862e","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"460 x 678 x 546 x 11","ModificationTimestamp":"2018-11-01T12:21:50.196Z","PropertyAttachedYN":true,"BuyerAgentKey":null,"TaxLot":"Lot 64 of Block 5 of Tract 997 of New Mathewberg","BusinessName":"Heaney-Dooley","BuyerAgentEmail":null,"Coordinates":[-118.016384,33.622839],"AccessCode":"ech6","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":true,"LotDimensionsSource":"Assessor","Country":"US","UnitNumber":"#745","CoListAgentPreferredPhoneExt":null,"OpenParkingYN":true,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb02b3","Inclusions":"Quis ratione nihil dolor voluptatem. Enim exercitationem dolores enim voluptas accusamus cum molestiae. Tempora fuga adipisci possimus animi autem. Reiciendis quam ad quia. Omnis voluptatem dicta minus pariatur.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"(128) 807-0224","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Meteres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Ground Level w/o Steps","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"208-940-0211","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":3,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":"Bayer Fields Street","ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Agent","ListOfficeFax":null,"AnchorsCoTenants":"Swift, Murray and Gusikowski,Kuhn and Sons,Beer-Renner,Waters-White,Emmerich, Goodwin and Hirthe,Quitzon Inc,Stiedemann LLC","PatioAndPorchFeatures":["qui","repudiandae"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"New Autumnmouth","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"ag7142m38x5xjvqpnpnsrze6c","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO","Short Sale"],"NewConstructionYN":true,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":4,"OriginalListPrice":174643,"AssociationFee2":64,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors","Energy efficient windows","Energy efficient stove"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/11.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a8f","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a8f","ShortDescription":"Omnis conturbo stipes vereor."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/34.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a90","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a90","ShortDescription":"Iure cogo alter ceno aut sustineo."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/31.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a91","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a91","ShortDescription":"Volubilis utrimque tempus verus volva cattus."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/12.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a92","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a92","ShortDescription":"Culpa astrum voluptatem corrigo cito."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/14.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a93","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a93","ShortDescription":"Voluntarius suscipio et omnis."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"Virginia","OriginalEntryTimestamp":"2018-12-24T02:01:53.735Z","BuildingFeatures":["Gym","Patio/Rooftop Deck","Elevator","Concierge Service"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Partnership","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Fugit quo optio mollitia sunt voluptatem nihil. Ex reiciendis asperiores occaecati porro perspiciatis. Debitis beatae officia deserunt consequatur iure ad omnis.","CopyrightNotice":"Ut tenetur illum accusamus nesciunt sunt et rerum nostrum. Quo sit expedita illo voluptatem dolorum mollitia. Aliquid quam doloribus est minima. Exercitationem et voluptates blanditiis laborum et deleniti.\n \r\tEt qui provident quod sapiente. Nam blanditiis cupiditate illum voluptatem voluptas. Est fuga sed sit dolor et porro. Tenetur eaque voluptatum ut cupiditate sed et voluptatem. Suscipit quae reprehenderit nostrum cum mollitia ut.","ShowingContactName":"Adolphus Emie Luettgen","MobileDimUnits":null,"LotFeatures":["non","consequatur","quia"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"27052","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":22,"BuyerOfficeName":null,"AssociationFee":249,"LeaseAmount":null,"LotSizeSquareFeet":1593,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Connecticut","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["voluptatem","et","ut","tenetur","dolore"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":"#745 162 Bayer Fields Street, Kelsiside, Washington 27052","OpenParkingSpaces":1,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fba4aa4055b9f296a31')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Minima atque sed aut. Sint non cupiditate repudiandae explicabo autem earum. Sunt aut quo dolorem natus laborum consequuntur recusandae. Ducimus natus voluptatem et aut ut ut ab error. Dolores consectetur et minus ut vel.\n \r\tQuasi optio reiciendis ea accusamus nostrum dignissimos saepe. Harum facere molestiae autem omnis atque voluptatum nemo. Deserunt laborum aut sit nulla.","LockBoxLocation":"Ipsa sint aut odit vel. Sed eum quia hic. Est natus repudiandae est. Ut eum rerum repellendus est.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-08-04","LaundryFeatures":["In Kitchen","Gas Dryer Hookup","Washer"],"Flooring":["Hardwood","Laminate","Vinyl"],"PhotosCount":5,"FireplacesTotal":4,"ListTeamKey":null,"AdditionalParcelsYN":false,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":false,"SeniorCommunityYN":true,"Cooling":["Evaporative Cooler","Ceiling Fan"],"ExteriorFeatures":[],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:46.134Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Inventore id et facilis ea omnis tenetur incidunt rerum. Delectus nisi accusamus et ut distinctio voluptas cum amet. Est occaecati ducimus nesciunt molestiae sed.\n \r\tPerspiciatis in voluptas voluptatem. Autem aut omnis harum quia blanditiis. Sed earum autem rerum. Fuga harum dicta blanditiis ullam odio maxime quas minima. Et harum laborum dolorum quis ea nihil ratione et.\n \r\tExplicabo ea eum ut aut corrupti autem et. Dolores laborum blanditiis qui. Et eos eligendi odit incidunt explicabo fugit explicabo commodi. Amet officia ipsa repudiandae officia. Id vitae provident dicta officiis qui porro aut.\n \r\tEst distinctio quibusdam iusto iure ratione alias. Provident placeat et eaque nisi et eius. Ut tempora commodi eos ducimus dignissimos fuga voluptas voluptatem. Sed non enim fugit.","DocumentsCount":1,"CancelationDate":null,"AssociationName":"quia","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Marilie Keeling Plc","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Monthly","CrossStreet":null,"OccupantPhone":"(614) 878-9192 x4205","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":9262,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher"],"MLSAreaMajor":null,"TaxAnnualAmount":475189,"LandLeaseAmount":7705870935,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Business","BathroomsTotalDecimal":12.5,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":"11","GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fba4aa4055b9f296a31","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":"(168) 997-6789","CommonWalls":["1 Common Wall"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Broker"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Lindgren and Sons","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Erica","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Magnam quisquam inventore ut aut corporis esse ipsam. Qui voluptatum voluptatibus ratione assumenda. Et consequatur voluptatem et ut. Natus assumenda ratione ut quo. Totam tempore consequuntur quod illum eaque.\n \r\tAut quis voluptas deserunt occaecati molestiae repudiandae repudiandae consequatur. Exercitationem nemo aliquid minima dolores ipsa magni. Cumque quod amet qui itaque quia voluptatum dicta dignissimos.","Concessions":null,"AttachedGarageYN":true,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel","Composite"],"BuyerAgentNamePrefix":null,"ParkingTotal":2,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":["Cash"],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Bauch-Lakin","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Condominium","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":["Close of Escrow","Close Plus 1 Day","Close Plus 2 Days","Close Plus 3 Days","Close Plus 3 to 5 Days"],"CoListAgentOfficePhone":null,"WaterfrontYN":true,"BathroomsFull":6,"LotSizeAcres":9,"SubdivisionName":"sint","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":true,"Fencing":["Wood"],"LotSizeSource":"Estimate","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Et aspernatur voluptate optio. Quos consequatur voluptas vero aliquid quia quo. Consectetur esse et ipsam laborum cupiditate. Ut reiciendis neque distinctio debitis. Repudiandae quos architecto molestias sit possimus at ipsam sapiente.","FarmCreditServiceInclYN":null,"ListingService":"Entry Only","Elevation":63288,"WaterSource":["Municipal"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Truck Doors"],"StoriesTotal":3,"YearBuilt":2001,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":8,"CoListOfficeFax":null,"Disclaimer":"Quia similique explicabo aliquam perferendis quis nemo ut. Qui delectus in aut nihil eum qui. Et ut deleniti nihil perspiciatis.\n \r\tFacilis voluptate dignissimos quis quia quisquam distinctio. Officiis expedita facere distinctio voluptatibus minima cum aut. Tempora porro accusamus sed distinctio.","ZoningDescription":"Residential","PreviousListPrice":86505,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":290,"PetsAllowed":["Yes","No","Call","Cats OK","Dogs OK","Number Limit"],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Tenant","OtherStructures":[],"AssociationAmenities":[],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-06-14T20:55:06.974Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":4287,"TaxAssessedValue":716702,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"1-903-317-3475","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Electric","Boiler","Wood"],"StructureType":[],"BuildingAreaSource":"Assessor","BathroomsOneQuarter":2,"BuilderModel":"Awesome Concrete Hat","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Hortense","OwnerPays":[],"BedroomsPossible":6,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":[],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Hodkiewicz Group","ListingId":"5dba1fba4aa4055b9f296a32","DocumentsChangeTimestamp":null,"CommunityFeatures":[],"ShowingStartTime":null,"BathroomsTotalInteger":16,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":20,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Square Feet","City":"West Joyce","OwnerPhone":null,"InternetEntireListingDisplayYN":false,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"North-West","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Concrete"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Gia Benny Sanford","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Tempore et aperiam esse non odio. Repudiandae quaerat alias et ea veritatis ut. Tenetur ut nihil at non qui modi voluptas odit. Tempora voluptatum eum veritatis. Voluptatum voluptatem voluptates vitae dolores quibusdam ipsum et.\n \r\tSunt ab quos maxime nemo optio ut ea et. Sint velit officiis est. Sapiente harum reiciendis fugiat quisquam reprehenderit voluptas natus delectus. Adipisci aliquam recusandae non non non unde placeat ut. Et quis molestias exercitationem magnam quisquam.\n \r\tCupiditate dolorem tempore veritatis voluptatum odit ratione. Fuga tempore fuga sint non. Est sit ullam aliquam culpa.\n \r\tEa nisi rem vero rem laudantium debitis atque. A occaecati harum nisi. Voluptas aut non quasi ad dolores quia. Quos perspiciatis hic qui voluptatem qui architecto voluptatum ut.","InternetConsumerCommentYN":false,"BuildingAreaTotal":23131,"YearBuiltSource":"Estimate","OtherEquipment":["Intercom","Central Vacuum Nozzle"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"Monthly","BedroomsTotal":2,"ShowingInstructions":"Libero laboriosam ut fugit culpa sit non earum. Nesciunt nihil sapiente voluptate. Est ratione voluptatem dolor. Doloribus iste eaque in et doloremque.\n \r\tReprehenderit vel odit adipisci libero quia. In iusto error voluptatibus. Dignissimos aut consequuntur in officiis est omnis consequatur nulla.\n \r\tVero repellendus non reiciendis assumenda. Qui iure ab porro. Sapiente iusto provident sint cum ut. Modi vel earum ducimus adipisci voluptatum corrupti. Corrupti sapiente nihil odio.\n \r\tEa laudantium quia quia veniam. Id harum ducimus nisi natus quam ipsa quia dolor. Fugiat sit exercitationem occaecati ab quibusdam et et aut. Rerum nobis eius numquam eum.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":false,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa4a2a50c5b81f0826d","OnMarketDate":"2019-01-13","CarportSpaces":1,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-06-18","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Feet","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-117.853937,"AvailabilityDate":"2019-11-20","TaxTract":"Lot 8 of Block 88 of Tract 4461 of Kassulkeburgh","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":true,"PublicRemarks":"Voluptate nisi est rerum itaque qui eligendi perferendis ut. Eius incidunt tempore officia quo voluptatem voluptate et. Ut ut dolor necessitatibus cum aliquam labore ipsum. Possimus deserunt cum voluptates aut.\n \r\tQuia eveniet voluptate facere odio et aspernatur et. Animi maxime magni voluptas esse sint quasi. Adipisci aliquid aut temporibus. Et eum illo vel. Ipsa odio error deserunt.\n \r\tQui dolor ad quod laborum fugiat. Laborum eaque cum eius exercitationem accusantium recusandae quaerat molestiae. Inventore corrupti optio ratione fuga blanditiis nulla. Expedita ut quaerat et nobis. Quia alias explicabo neque totam sit eius.\n \r\tAmet aut sequi quis rerum hic a. Quibusdam eum perferendis consequatur. Velit non sit corporis voluptatum.","FinancialDataSource":["Listing Broker"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Pennsylvania","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Cement"],"ListAgentPager":null,"PriceChangeTimestamp":"2019-10-11T08:16:38.179Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"MI","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Estimate","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":1470,"CoBuyerOfficeName":null,"ListOfficeName":"Vandervort LLC Realty","TaxBlock":"Lot 0 of Block 39 of Tract 3331 of Lake Mertie","CoListAgentTollFreePhone":null,"BuyerFinancing":[],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["odio"],"BusinessType":["Utility"],"DualVariableCompensationYN":false,"Latitude":33.995346,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":616032,"RoadFrontageType":["Freeway frontage"],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":8789194,"DOH3":null,"BelowGradeFinishedAreaSource":"Estimate","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Daily","CoListAgentVoiceMailExt":null,"StateOrProvince":"Arkansas","AboveGradeFinishedAreaUnits":"Acres","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":1,"MiddleOrJuniorSchool":"Corkery and Sons","AssociationFeeIncludes":["Insurance"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow","Trulia","hotspads.com"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"390","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":[],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb0267","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":4,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-01-15T11:51:25.142Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Erica Hortense Cummerata","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":2,"PropertyCondition":[],"FrontageType":["Golf Course"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1840","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Grillage"],"View":["View","Lake View"],"SignOnPropertyYN":true,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Sint at cumque reprehenderit nisi autem. Velit deleniti velit cupiditate rerum asperiores aut fuga. Voluptas autem et doloribus suscipit aperiam cupiditate.","BuyerAgentPager":null,"HighSchool":"Pfeffer-Kuhlman","LeaseConsideredYN":false,"HomeWarrantyYN":false,"Levels":["One Level","Two Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":true,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Cummerata","ListAgentURL":null,"InteriorFeatures":["Aut magnam sit veritatis temporibus minus repellendus nihil sit. Voluptatem aliquam perspiciatis dolorum voluptatem libero. Asperiores maiores ipsum velit officiis error. Veritatis ea et laudantium est cumque."],"LockBoxType":["Qui dignissimos porro labore laboriosam. Odio consectetur cupiditate quibusdam earum consectetur beatae. Et eum perferendis nihil officiis et numquam. Aut et quas eveniet iure qui. Dicta sit deserunt ut adipisci nam architecto."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2019-01-20","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa4a2a50c5b81f0826e","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"751 x 135 x 946 x 132","ModificationTimestamp":"2019-10-14T03:04:33.254Z","PropertyAttachedYN":true,"BuyerAgentKey":null,"TaxLot":"Lot 51 of Block 43 of Tract 1206 of Marquiston","BusinessName":"Von, Effertz and White","BuyerAgentEmail":null,"Coordinates":[-117.853937,33.995346],"AccessCode":"ory9","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":true,"LotDimensionsSource":"Estimate","Country":"US","UnitNumber":"#832","CoListAgentPreferredPhoneExt":null,"OpenParkingYN":true,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb0268","Inclusions":"Quia et in non velit. Excepturi rerum aut harum et totam eligendi. Sint optio vel explicabo et aliquam cupiditate sit qui.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"1-163-623-1654","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Meteres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Elevator","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"760-682-3026 x0788","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":2,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Yes Connected"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":"Dora Vista Vista","ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Assessor","ListOfficeFax":null,"AnchorsCoTenants":"Fritsch, Bergnaum and Murphy,Keeling, Reilly and McLaughlin,Kub, Gutkowski and Flatley,Trantow LLC,Hansen, Dietrich and Hilpert","PatioAndPorchFeatures":["autem","dolorum","blanditiis"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"New Olliefort","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"hc9u6jhm2mi2389sp711qlxha","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace","Wood","Gas","Two","Propane"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO","Short Sale","Probate","Auction"],"NewConstructionYN":true,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":2,"OriginalListPrice":924191,"AssociationFee2":159,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors","Energy efficient windows"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/10.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a2c","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a2c","ShortDescription":"Conqueror uter auctor una qui."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/16.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a2d","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a2d","ShortDescription":"Claro delicate paulatim velut sit."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/05.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a2e","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a2e","ShortDescription":"Viscus basium cupiditate."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/04.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a2f","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a2f","ShortDescription":"Coniuratio supplanto corrumpo illo cena."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/29.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a30","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a30","ShortDescription":"Triduana patior necessitatibus callide vel turpis."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":["Ramp"],"FarmLandAreaSource":null,"HighSchoolDistrict":"Ohio","OriginalEntryTimestamp":"2019-02-19T07:44:36.485Z","BuildingFeatures":["Lounge"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Partnership","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Dolore dicta excepturi neque rerum perferendis quidem aut. Architecto facilis hic sit. Recusandae magni voluptate rem reprehenderit omnis. Repellendus temporibus consequatur ad eius expedita repellat iusto. Blanditiis minima culpa quis saepe sed eum deleniti.","CopyrightNotice":"Itaque repudiandae rerum fugit. Distinctio nemo possimus ut distinctio molestias aspernatur. Labore dignissimos autem omnis vel similique. Officia excepturi maiores consectetur repellat repellendus nemo tempora ipsum. Aspernatur dicta temporibus voluptas adipisci voluptatem delectus quidem.\n \r\tSaepe quasi et expedita exercitationem in fuga soluta voluptate. Laboriosam saepe qui eum ad. Inventore ut animi ut maiores illo non. Esse vero soluta quisquam id.","ShowingContactName":"Dee Jazlyn Parisian","MobileDimUnits":null,"LotFeatures":["aut","molestias","officiis","possimus","accusamus"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"11675-4900","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":115,"BuyerOfficeName":null,"AssociationFee":135,"LeaseAmount":null,"LotSizeSquareFeet":979,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Minnesota","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":[],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":"#832 11 Dora Vista Vista, West Joyce, Arkansas 11675-4900","OpenParkingSpaces":0,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fba4aa4055b9f296a52')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Voluptatem ducimus quasi accusantium amet rerum non quisquam. Voluptate distinctio quia qui sed in quaerat excepturi reprehenderit. Cumque perspiciatis aut fugiat dolore fugit accusantium qui.\n \r\tModi quisquam laboriosam quis laboriosam recusandae cupiditate. Consequatur et cumque voluptatem. Sint ad id qui rerum.","LockBoxLocation":"Architecto expedita illum dolor aut dolores non quisquam accusantium. Odit perspiciatis quae rerum asperiores rerum dolores. Error officia fugiat est culpa quos aliquam suscipit. Officia corrupti iure repellendus temporibus sunt odit. Fugit qui totam enim ex dignissimos odio ipsum reprehenderit.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-05-04","LaundryFeatures":["In Kitchen","Gas Dryer Hookup","Washer"],"Flooring":["Hardwood","Laminate","Vinyl","Tiles","Cork","Rugs"],"PhotosCount":8,"FireplacesTotal":3,"ListTeamKey":null,"AdditionalParcelsYN":false,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":false,"SeniorCommunityYN":false,"Cooling":[],"ExteriorFeatures":["Balcony","Fenced Yard","Sprinkler","Garden"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:46.153Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Velit qui vel qui est error consequuntur nemo. Molestias et doloremque illo ratione rerum iusto fugit sint. Est maiores magni id enim cumque dolore aliquid. Ullam eius fuga nobis modi ut delectus.\n \r\tVero est praesentium sint. Nihil eos debitis molestias voluptatum repudiandae qui. Rerum voluptatem incidunt iure aliquid fugiat facilis neque.\n \r\tImpedit facere voluptatem sapiente occaecati quas. Saepe quia et velit. Non iste culpa alias dolores sint consequatur.\n \r\tEx accusantium itaque voluptatibus voluptatem. Sint voluptas molestiae unde voluptatem. Tempora ullam non repudiandae deleniti.","DocumentsCount":4,"CancelationDate":null,"AssociationName":"qui","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Ike Schimmel Bldg","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Annually","CrossStreet":null,"OccupantPhone":"1-424-970-7384 x8101","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":469,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher"],"MLSAreaMajor":null,"TaxAnnualAmount":303320,"LandLeaseAmount":null,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Business","BathroomsTotalDecimal":10.75,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":false,"MlsStatus":"Expired","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":null,"GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fba4aa4055b9f296a52","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":null,"CommonWalls":["No One Above","2+ Common Walls","No Common Walls","End Unit","1 Common Wall","No One Below"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Broker"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Pfannerstill, Harvey and Gorczany","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Matteo","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Omnis repellat itaque quia. Et quos id nihil. Et tenetur sunt eum.\n \r\tExercitationem impedit illum iusto quidem. Id sit excepturi maxime. Incidunt non est accusamus aut. Saepe aut inventore aut. Dicta atque enim sapiente autem et numquam.","Concessions":null,"AttachedGarageYN":false,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal"],"BuyerAgentNamePrefix":null,"ParkingTotal":3,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Boyer LLC","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":[],"CoListAgentOfficePhone":null,"WaterfrontYN":true,"BathroomsFull":0,"LotSizeAcres":9,"SubdivisionName":"earum","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":false,"Fencing":["Wire","Wrought Iron","Block","Chain Link"],"LotSizeSource":"Assessor","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Explicabo porro sapiente est itaque voluptates et. Sunt error voluptas sapiente dolor doloribus et. Quod porro qui et veritatis numquam. Ut ullam consectetur recusandae repellat.","FarmCreditServiceInclYN":null,"ListingService":"Full Service","Elevation":16412,"WaterSource":["Municipal","Irrigation District","Private Utility"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["Sliding Doors","Overhead Doors"],"StoriesTotal":3,"YearBuilt":1964,"ElectricOnPropertyYN":null,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":11,"CoListOfficeFax":null,"Disclaimer":"Et nihil quam recusandae omnis reiciendis qui quos occaecati. Nulla saepe commodi id qui hic qui. Fuga sed molestiae delectus libero.\n \r\tPlaceat nihil in repellendus eum quo. Harum fugit a cum. Nobis ratione ut laudantium dicta exercitationem et et aliquid.","ZoningDescription":"Agricultural","PreviousListPrice":393895,"LandLeaseYN":false,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":333,"PetsAllowed":[],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Vacant","OtherStructures":[],"AssociationAmenities":["Pool","Clubhouse"],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2019-08-24T23:52:25.770Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":2524,"TaxAssessedValue":875983,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"(571) 484-4764","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Boiler","Electric"],"StructureType":[],"BuildingAreaSource":"Agent","BathroomsOneQuarter":3,"BuilderModel":"Gorgeous Concrete Shirt","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Jodie","OwnerPays":[],"BedroomsPossible":8,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City","County"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Cormier-O'Reilly","ListingId":"5dba1fba4aa4055b9f296a53","DocumentsChangeTimestamp":null,"CommunityFeatures":["ipsa","eum","molestias"],"ShowingStartTime":null,"BathroomsTotalInteger":16,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":5,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Acres","City":"Zettaview","OwnerPhone":null,"InternetEntireListingDisplayYN":false,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":false,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Installed"],"DirectionFaces":"North-East","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Concrete"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Hassie Nichole Gutmann","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Ea tempora deleniti deserunt. Eveniet omnis nobis culpa. Modi assumenda id neque necessitatibus aut repudiandae. Quia rerum non ab et earum. Ut sit qui modi optio culpa.\n \r\tMaxime sunt eum excepturi alias veritatis in. Delectus ipsam sit qui. Cumque rerum officia et.\n \r\tConsequatur repellendus et quo est eius est est nam. Perferendis id est minus quasi. Magnam sit debitis quo non. Dolores dolorum ut quia dolorum.\n \r\tUt expedita et magni sed numquam. Quia non libero illo consequatur ipsa sapiente quod. Ipsa quod corporis ut qui consequatur.","InternetConsumerCommentYN":true,"BuildingAreaTotal":4975411,"YearBuiltSource":"Estimate","OtherEquipment":["Central Vacuum Nozzle","Intercom","Generator","Satellite Dish"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":null,"BedroomsTotal":1,"ShowingInstructions":"Eligendi voluptatem asperiores omnis sit sunt hic officia. Ea veritatis possimus eum. Ratione qui voluptas veritatis. Et sed aut nihil consequatur exercitationem fugiat. Vero quo doloribus aut voluptas.\n \r\tMagni sapiente ab error eum expedita temporibus. Velit alias minima reprehenderit. Mollitia vel et perferendis qui eligendi consequatur. Quis neque voluptatem voluptatem labore harum ea.\n \r\tAd accusantium sit libero est dicta aperiam non. Dolore earum voluptatem delectus et necessitatibus sit explicabo. Aut dolorem esse rerum corrupti vel a ut. Qui magnam odio nisi consequuntur ipsa consequuntur. Temporibus molestiae ipsam odit voluptas reiciendis velit libero.\n \r\tPossimus debitis ea laudantium. Dolorum neque sed excepturi accusamus molestiae maiores architecto. Aliquam nihil ut et commodi voluptatem natus odio qui.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":false,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa6a2a50c5b81f089d9","OnMarketDate":"2018-12-01","CarportSpaces":2,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-01-02","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Meters","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":false,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.084457,"AvailabilityDate":"2019-11-14","TaxTract":"Lot 22 of Block 56 of Tract 3894 of Aliamouth","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":false,"PublicRemarks":"Molestiae minima et odit rerum facere est. Explicabo minima molestiae quis maiores. Ipsam mollitia laborum aut voluptatem. Doloremque distinctio ut exercitationem.\n \r\tVoluptatem ea excepturi numquam sequi sunt minus. Commodi eos dolorem cum et omnis sit. Enim reiciendis iure suscipit tempora. Commodi ipsam molestiae est nesciunt. Ducimus ipsam magnam ex enim et adipisci hic.\n \r\tAtque hic et omnis est odio voluptate voluptatum. Ut voluptates a perferendis facere pariatur. Odio rerum ea quia maiores blanditiis necessitatibus consequatur reprehenderit.\n \r\tAutem sunt quae et sequi cumque perspiciatis recusandae quo. Sed sunt ipsa nulla voluptatem ut. Quam error illum vitae.","FinancialDataSource":["Listing Broker","Not Available"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Indiana","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Granite"],"ListAgentPager":null,"PriceChangeTimestamp":"2018-11-01T03:29:53.645Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"GU","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Agent","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":6664,"CoBuyerOfficeName":null,"ListOfficeName":"Corkery, Huel and Grady Realty","TaxBlock":"Lot 7 of Block 97 of Tract 1808 of East Connie","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":["fuga","ut","dolorem","dolorum","enim","rerum","dignissimos","ut"],"BusinessType":["Grocery"],"DualVariableCompensationYN":false,"Latitude":34.013218,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":505316,"RoadFrontageType":["Freeway frontage"],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":6781779,"DOH3":null,"BelowGradeFinishedAreaSource":"Assessor","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"Seasonal","CoListAgentVoiceMailExt":null,"StateOrProvince":"Tennessee","AboveGradeFinishedAreaUnits":"Square Feet","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":3,"MiddleOrJuniorSchool":"Mante and Sons","AssociationFeeIncludes":["Pest Control","Water","Cable TV","Insurance"],"CoListAgentMobilePhone":null,"ConcessionsComments":null,"SyndicateTo":["Zillow","Trulia","hotspads.com"],"VirtualTourURLUnbranded":null,"Gas":["Natural Gas"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"213","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":[],"ListOfficeKey":"O_5dba1f95cf17cd5b43eb027c","DistanceToGasNumeric":null,"FireplaceYN":false,"BathroomsThreeQuarter":4,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-06-05T20:37:23.068Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Matteo Jodie Schmidt","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":2,"PropertyCondition":[],"FrontageType":["Golf Course","Lakefront"],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1936","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Pile"],"View":["View","Lake View"],"SignOnPropertyYN":false,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Repellat et sunt nostrum omnis et. Qui qui sequi dignissimos facilis qui ea. Ex est esse non sint voluptas ratione. Enim doloribus impedit voluptas eum nihil ab. Dicta commodi et officia unde voluptates aut reprehenderit fugit.","BuyerAgentPager":null,"HighSchool":"Hahn LLC","LeaseConsideredYN":true,"HomeWarrantyYN":true,"Levels":["One Level","Two Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":false,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Schmidt","ListAgentURL":null,"InteriorFeatures":["Autem facere sit reprehenderit numquam cumque rerum dicta. Officia sed et odit repudiandae ut est voluptatem accusamus. Quos sunt doloribus quae. Ut voluptates cum laborum facere eum quia. Id delectus et non animi voluptatem."],"LockBoxType":["Laborum deleniti et in. Et error eum animi qui tenetur reprehenderit voluptatem occaecati. Nobis excepturi provident ut dolore velit illo sed. Ut quia vitae reiciendis."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2019-05-08","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa6a2a50c5b81f089da","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"330 x 61 x 400 x 859","ModificationTimestamp":"2019-07-07T14:15:52.920Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 81 of Block 46 of Tract 317 of Marcelland","BusinessName":"Shanahan, Wunsch and Ernser","BuyerAgentEmail":null,"Coordinates":[-118.084457,34.013218],"AccessCode":"zdej","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":true,"LotDimensionsSource":"Assessor","Country":"US","UnitNumber":null,"CoListAgentPreferredPhoneExt":null,"OpenParkingYN":false,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f95cf17cd5b43eb027d","Inclusions":"Repellendus distinctio officia sit. Explicabo et iusto necessitatibus et vitae quam. Vel alias sint ducimus harum accusantium eum sit et.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"1-920-112-1891","ConcessionsAmount":null,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Meteres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Ground Level w/ Steps","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"909.660.2535 x6696","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":4,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":null,"ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Agent","ListOfficeFax":null,"AnchorsCoTenants":"Welch LLC","PatioAndPorchFeatures":[],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"North Todchester","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"w1i88bbn54148snhbbt6h19a0","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO","Short Sale","Probate"],"NewConstructionYN":false,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":2,"OriginalListPrice":725768,"AssociationFee2":238,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors","Energy efficient windows"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/30.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a4a","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a4a","ShortDescription":"Beatae caste thesaurus cribro trucido colligo."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/27.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a4b","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a4b","ShortDescription":"Pectus vulnero dolores averto video."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/26.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a4c","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a4c","ShortDescription":"Capto cenaculum curatio timor comparo deserunt."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/31.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a4d","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a4d","ShortDescription":"Incidunt vobis corporis conor."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/10.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a4e","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a4e","ShortDescription":"Pecco corrigo delinquo cogito nesciunt taedium."},{"Order":6,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/07.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a4f","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a4f","ShortDescription":"Vinum mollitia tot corroboro unde."},{"Order":7,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/15.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a50","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a50","ShortDescription":"Universe candidus caelum."},{"Order":8,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/08.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a51","ResourceName":"Property","ClassName":"Business","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a51","ShortDescription":"Ut cupiditas amicitia peior."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"Nevada","OriginalEntryTimestamp":"2019-02-14T22:43:54.622Z","BuildingFeatures":["Gym","Elevator","Patio/Rooftop Deck"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Sole P","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Impedit doloribus a sit recusandae. Cum optio quod vero sequi. Nostrum nesciunt placeat neque. Saepe dolor vitae ullam qui.","CopyrightNotice":"Accusantium ipsum maiores autem quis voluptas ad ratione explicabo. Illum rerum laboriosam numquam. Cumque dolor quaerat qui. Voluptates quam et optio. Magni et est laudantium nemo soluta est sapiente asperiores.\n \r\tIn amet illum sint nostrum exercitationem. Consequatur autem quod commodi nisi esse doloribus. Tempora id vel reiciendis voluptas provident non quo.","ShowingContactName":"Celestino Gustave Swaniawski","MobileDimUnits":null,"LotFeatures":[],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"16294","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":96,"BuyerOfficeName":null,"AssociationFee":149,"LeaseAmount":null,"LotSizeSquareFeet":1189,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"North Carolina","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["nulla","et","est","reprehenderit","aperiam"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":null,"OpenParkingSpaces":2,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]},{"@odata.id":"https://api.bridgedataoutput.com/api/v2/OData/test/Property('P_5dba1fba4aa4055b9f296aa0')","StreetDirPrefix":null,"DistanceToStreetComments":null,"PublicSurveyRange":null,"LeaseAssignableYN":null,"GreenWaterConservation":[],"NumberOfUnitsMoMo":null,"LivingAreaUnits":"SquareFeet","CoListAgentCellPhone":null,"SeatingCapacity":null,"TaxLegalDescription":"Explicabo nisi sunt et voluptatem officia eos. Odio nihil cum aliquam. Dolorem aperiam suscipit ut molestias animi veniam nemo. Numquam dolor dolor earum neque.\n \r\tExcepturi impedit nulla sequi nemo et debitis. Hic facere omnis ipsam molestias saepe. Inventore ab quam consequatur et praesentium. Animi distinctio sunt quisquam repudiandae quas vel vitae. Sint occaecati ullam qui suscipit nisi ipsam id.","LockBoxLocation":"In earum et provident. Consequuntur sit totam laborum ut est et. Facere quidem amet eveniet aliquid sunt et ratione. Aut doloremque iste minus est ex aut. Architecto pariatur necessitatibus cumque voluptatem.","BuyerAgentDesignation":[],"YearEstablished":null,"BuyerTeamKey":null,"ListPriceLow":null,"ContingentDate":"2019-02-16","LaundryFeatures":["In Kitchen","Gas Dryer Hookup","Washer"],"Flooring":["Hardwood"],"PhotosCount":9,"FireplacesTotal":1,"ListTeamKey":null,"AdditionalParcelsYN":false,"CoBuyerAgentDirectPhone":null,"WaterfrontFeatures":[],"PastureArea":null,"SubAgencyCompensation":null,"ViewYN":true,"SeniorCommunityYN":false,"Cooling":[],"ExteriorFeatures":["Balcony","Fenced Yard","Sprinkler"],"CountryRegion":null,"OtherParking":null,"IrrigationWaterRightsAcres":null,"SourceSystemID":null,"StatusChangeTimestamp":"2019-10-30T23:41:46.211Z","SecurityFeatures":[],"BuyerAgentFullName":null,"RVParkingDimensions":null,"CoBuyerAgentDesignation":[],"CoBuyerAgentNamePrefix":null,"CoBuyerAgentLastName":null,"PrivateOfficeRemarks":"Nam consectetur repellendus in illum eum repellendus et et. Et sequi at autem sed ut. Aut autem vel maiores saepe voluptatem repudiandae. Voluptate maxime quam ut.\n \r\tAssumenda omnis tenetur incidunt voluptatem ut. Consectetur provident aut necessitatibus accusantium autem similique. Blanditiis omnis vero ut.\n \r\tMagni dolorum assumenda esse animi odio impedit sed autem. Excepturi ad dicta eos quos odio quo praesentium eos. In hic quas a et omnis harum. Sint distinctio architecto est autem fuga. Placeat tempore ea id id adipisci optio.\n \r\tAspernatur ipsa rerum accusamus sunt aut officia. Quisquam libero sed consequatur eum et laborum atque. Molestiae sunt aut fugit earum. Sunt mollitia voluptas aut. Dicta accusantium quae qui cupiditate dolores aspernatur porro voluptas.","DocumentsCount":3,"CancelationDate":null,"AssociationName":"vitae","DistanceToBusComments":null,"TaxExemptions":[],"CoListAgentURL":null,"BuildingName":"Terrence Auer Co","YearsCurrentOwner":null,"DistanceToSchoolsComments":null,"ListAgentPreferredPhoneExt":null,"AssociationFeeFrequency":"Weekly","CrossStreet":null,"OccupantPhone":"(219) 947-2603","HeatingYN":true,"CoBuyerAgentStateLicense":null,"WaterBodyName":null,"ManagerExpense":null,"DistanceToSewerNumeric":null,"DistanceToGasComments":null,"CoBuyerAgentMiddleName":null,"AboveGradeFinishedArea":2919,"BuyerAgentFax":null,"MajorChangeType":"back on market","ListingKeyNumeric":null,"Appliances":["Dishwasher","Disposal","Oven"],"MLSAreaMajor":null,"TaxAnnualAmount":599513,"LandLeaseAmount":91348773743,"CoBuyerAgentPreferredPhoneExt":null,"CoListAgentPreferredPhone":null,"CurrentUse":[],"OriginatingSystemKey":"test","CountyOrParish":"County","PropertyType":"Residential","BathroomsTotalDecimal":11.5,"NumberOfPads":null,"TaxParcelLetter":null,"OriginatingSystemName":null,"AssociationYN":true,"MlsStatus":"Active","CarrierRoute":null,"BuyerOfficeURL":null,"StreetNumber":null,"GrossScheduledIncome":null,"LeaseTerm":null,"ListingKey":"P_5dba1fba4aa4055b9f296aa0","CoBuyerAgentNameSuffix":null,"CoListAgentNamePrefix":null,"AssociationPhone2":null,"CommonWalls":["No One Above"],"ListAgentVoiceMail":null,"CommonInterest":null,"ListAgentKeyNumeric":null,"CoListAgentLastName":null,"ShowingContactType":["Seller"],"CoBuyerAgentMobilePhone":null,"Vegetation":[],"IrrigationWaterRightsYN":null,"BuyerAgentMiddleName":null,"ElementarySchool":"Watsica, Graham and Gerhold","DistanceToFreewayComments":null,"StreetDirSuffix":null,"DistanceToSchoolsNumeric":null,"CoBuyerOfficePhone":null,"CoListOfficePhoneExt":null,"ListAgentFirstName":"Tyler","DistanceToShoppingNumeric":null,"TaxMapNumber":null,"Directions":"Culpa animi dolor molestias. Inventore vitae ipsam rerum consequatur inventore animi quia. Aut animi nobis non molestiae illum. Enim sunt nihil earum. Et voluptatem facilis deserunt incidunt et sint.\n \r\tQuae quia ea consequatur debitis. Et illum enim reprehenderit alias et. Est molestiae molestiae accusamus iure.","Concessions":"No","AttachedGarageYN":false,"OnMarketTimestamp":null,"DistanceToBusNumeric":null,"StandardStatus":"Active","CultivatedArea":null,"Roof":["Metal","Gravel","Composite"],"BuyerAgentNamePrefix":null,"ParkingTotal":3,"ContinentRegion":null,"ListAgentOfficePhone":null,"ListAgentHomePhone":null,"BuyerTeamName":null,"CoListOfficeKeyNumeric":null,"DistanceToElectricUnits":null,"PoolPrivateYN":false,"PropertyUniversalID":null,"AdditionalParcelsDescription":null,"Township":null,"ListingTerms":[],"NumberOfUnitsLeased":null,"FurnitureReplacementExpense":null,"DistanceToStreetUnits":null,"BuyerAgentNameSuffix":null,"GardenerExpense":null,"DistanceToSchoolBusUnits":null,"BuilderName":"Dickens and Sons","BuyerAgentStateLicense":null,"ListOfficeEmail":null,"PropertySubType":"Single Family Residence","CoListAgentFirstName":null,"BuyerAgentDirectPhone":null,"CoBuyerAgentPreferredPhone":null,"OtherExpense":null,"Possession":["Close of Escrow"],"CoListAgentOfficePhone":null,"WaterfrontYN":true,"BathroomsFull":3,"LotSizeAcres":5,"SubdivisionName":"sunt","SpecialLicenses":[],"BuyerOfficeAOR":null,"InternetAddressDisplayYN":false,"Fencing":["Block"],"LotSizeSource":"Estimate","WithdrawnDate":null,"DistanceToWaterNumeric":null,"VideosCount":null,"Contingency":"Tempore quia itaque sequi aperiam maxime rem vel iste. Ipsa ipsa incidunt nostrum omnis ullam corporis quae. Aliquam ipsa voluptatem perspiciatis voluptas. Fuga dignissimos amet aut est illo veritatis et. Iusto animi commodi rerum maxime non sint possimus.","FarmCreditServiceInclYN":null,"ListingService":"Entry Only","Elevation":39973,"WaterSource":["Municipal"],"Topography":null,"SubAgencyCompensationType":null,"ProfessionalManagementExpense":null,"DistanceToFreewayUnits":null,"DoorFeatures":["French Doors","Sliding Doors"],"StoriesTotal":3,"YearBuilt":1946,"ElectricOnPropertyYN":true,"MapCoordinateSource":null,"StateRegion":null,"IrrigationSource":[],"BathroomsPartial":7,"CoListOfficeFax":null,"Disclaimer":"Libero doloremque quam sapiente illum tempora dolor tenetur labore. Quo qui aut error. Reiciendis laudantium corrupti dolor quam earum magni.\n \r\tEt quae minima eaque quod ipsum. Neque amet id explicabo ut suscipit sunt modi. Nostrum corrupti deserunt ex enim asperiores.","ZoningDescription":"Residential","PreviousListPrice":81164,"LandLeaseYN":true,"VacancyAllowanceRate":null,"NumberOfSeparateWaterMeters":null,"DaysOnMarket":220,"PetsAllowed":[],"CoBuyerAgentVoiceMailExt":null,"BuyerAgencyCompensationType":null,"ListAgentFax":null,"NetOperatingIncome":null,"SerialXX":null,"OccupantType":"Owner","OtherStructures":["qui","consequatur","porro","sunt","optio"],"AssociationAmenities":["Pool"],"BodyType":[],"ClosePrice":null,"VirtualTourURLZillow":null,"ListAgentDesignation":[],"BuyerAgentPreferredPhone":null,"DistanceToPhoneServiceComments":null,"PoolExpense":null,"PendingTimestamp":"2018-11-25T05:37:52.252Z","CoBuyerAgentURL":null,"StreetNumberNumeric":null,"ListAgentCellPhone":null,"CoListAgentOfficePhoneExt":null,"IncomeIncludes":[],"CoBuyerAgentVoiceMail":null,"LivingArea":8522,"TaxAssessedValue":156721,"BuyerTeamKeyNumeric":null,"CoListAgentKeyNumeric":null,"CumulativeDaysOnMarket":null,"CoListAgentStateLicense":null,"ParkingFeatures":[],"PostalCodePlus4":null,"ListAgentPreferredPhone":"1-717-917-2638 x2832","CoBuyerAgentHomePhone":null,"BuyerOfficePhoneExt":null,"PoolFeatures":[],"BuyerAgentOfficePhoneExt":null,"NumberOfUnitsInCommunity":null,"Heating":["Electric"],"StructureType":[],"BuildingAreaSource":"Agent","BathroomsOneQuarter":3,"BuilderModel":"Incredible Concrete Shoes","CoBuyerAgentTollFreePhone":null,"TotalActualRent":null,"TrashExpense":null,"CoListAgentMlsId":null,"DistanceToStreetNumeric":null,"PublicSurveyTownship":null,"ListAgentMiddleName":"Waino","OwnerPays":[],"BedroomsPossible":9,"BuyerAgentVoiceMailExt":null,"BuyerOfficePhone":null,"RoadResponsibility":["City"],"ListingAgreement":null,"PublicSurveySection":null,"CoListOfficeEmail":null,"AssociationName2":"Robel and Sons","ListingId":"5dba1fba4aa4055b9f296aa1","DocumentsChangeTimestamp":null,"CommunityFeatures":[],"ShowingStartTime":null,"BathroomsTotalInteger":15,"ParkManagerName":null,"MapCoordinate":null,"RoomsTotal":23,"DistanceToPlaceofWorshipComments":null,"ListAgentOfficePhoneExt":null,"BuildingAreaUnits":"Square Meteres","City":"Lake Stephan","OwnerPhone":null,"InternetEntireListingDisplayYN":true,"CropsIncludedYN":null,"BuyerAgentOfficePhone":null,"GrazingPermitsBlmYN":null,"BuyerAgencyCompensation":null,"CoBuyerOfficeKeyNumeric":null,"LeaseExpiration":null,"ListAgentNameSuffix":null,"ShowingAdvanceNotice":null,"SerialX":null,"InternetAutomatedValuationDisplayYN":true,"BuyerAgentTollFreePhone":null,"SerialU":null,"TaxYear":2018,"Telephone":["Available"],"DirectionFaces":"North","SourceSystemName":null,"PossibleUse":[],"Furnished":null,"DistanceToSchoolBusComments":null,"ConstructionMaterials":["Brick"],"SuppliesExpense":null,"ListOfficeURL":null,"RangeArea":null,"ListingInputOriginalMedia":null,"OccupantName":"Rigoberto Ada Marquardt","BuyerOfficeKey":null,"ShowingEndTime":null,"TaxOtherAnnualAssessmentAmount":null,"PrivateRemarks":"Beatae quam dolore facere. Quaerat commodi dolore est at et minus. Excepturi eos eos fuga. Mollitia libero accusamus architecto sint. A omnis enim occaecati architecto eveniet aut neque qui.\n \r\tPerspiciatis eius et neque laboriosam quia. Iure architecto aut et nihil dolorem. Rerum illum suscipit distinctio iusto et magnam. Magnam laboriosam nemo cum voluptatum iste corporis aliquam.\n \r\tEt veniam placeat aspernatur quaerat similique qui tenetur sed. Distinctio ea sint rerum voluptatem occaecati quas voluptas. Minus occaecati voluptatem dicta voluptatem voluptatum. Natus hic et distinctio consequuntur eum aut iure.\n \r\tAutem error repellat quo. Qui soluta unde dignissimos et. Dicta magnam natus saepe est.","InternetConsumerCommentYN":true,"BuildingAreaTotal":1204178,"YearBuiltSource":"Estimate","OtherEquipment":["Central Vacuum Nozzle","Generator","TV Antenna","Intercom"],"HabitableResidenceYN":null,"PestControlExpense":null,"LaborInformation":[],"LandLeaseAmountFrequency":"Bi-Weekly","BedroomsTotal":4,"ShowingInstructions":"Aut cum atque minus labore in architecto voluptas. Quia id expedita quas harum dolorem doloremque. Nemo rerum repudiandae minima dolorem. Eos voluptas est aut sequi aut accusamus consequatur. Rerum ut architecto tempora.\n \r\tAliquam nobis reiciendis soluta suscipit nihil nulla necessitatibus aut. Velit qui nihil ut. Molestias ipsam tempora quasi deserunt ut. Nesciunt omnis omnis occaecati ducimus. Modi molestiae quibusdam ipsam veritatis expedita.\n \r\tAtque magnam ut quasi voluptatem itaque temporibus impedit hic. Reprehenderit quaerat officia quaerat corporis consequatur eaque. Eos quia perspiciatis impedit quia.\n \r\tEt fugiat sunt blanditiis quisquam. Omnis aut est id dolor error. Incidunt quasi qui tempora qui dignissimos ex alias. Eaque non ea nulla odio enim. Omnis nostrum aperiam odit et et id.","CoBuyerOfficeEmail":null,"CoListAgentDesignation":[],"CoListAgentDirectPhone":null,"CoolingYN":true,"GreenSustainability":[],"InsuranceExpense":null,"ListAgentKey":"M_5dba1fa6a2a50c5b81f08b11","OnMarketDate":"2019-03-24","CarportSpaces":3,"LotSizeUnits":null,"ListAgentEmail":null,"ContractStatusChangeDate":"2019-10-29","BuyerAgentHomePhone":null,"LeaseAmountFrequency":null,"MajorChangeTimestamp":null,"ElevationUnits":"Feet","CoBuyerAgentEmail":null,"WalkScore":null,"GarageYN":true,"HoursDaysOfOperation":[],"BuyerAgentPreferredPhoneExt":null,"DistanceToWaterUnits":null,"Make":null,"Longitude":-118.156681,"AvailabilityDate":"2020-01-07","TaxTract":"Lot 25 of Block 14 of Tract 3935 of Riceberg","Skirt":[],"BuyerAgentURL":null,"BuyerOfficeFax":null,"CarportYN":true,"PublicRemarks":"Iusto ipsum ipsa dolorum veniam odio sit. Enim aut labore perferendis. Dolorem at sed sapiente aut possimus quis illum.\n \r\tEx voluptatibus quae quibusdam. Enim dicta provident ut. Porro aliquam qui ullam tempore. Voluptate asperiores inventore magni omnis. Id labore eos rem consectetur tenetur.\n \r\tVoluptatum quis aut qui eos aut laboriosam aliquid maxime. Voluptatem qui iure suscipit. Totam dolor vel et.\n \r\tNumquam omnis vel non. Temporibus nesciunt sunt consequatur est neque sunt blanditiis sequi. Sed et rerum rerum sunt vitae saepe. Et totam dolores corporis dolorum sint quidem molestias. Et iste enim nesciunt itaque iure.","FinancialDataSource":["Listing Broker","Not Available","Seller"],"CoBuyerAgentKey":null,"PostalCity":null,"CurrentFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)","Other","Private"],"CableTvExpense":null,"NumberOfSeparateElectricMeters":null,"ElementarySchoolDistrict":"Wyoming","NumberOfFullTimeEmployees":null,"OffMarketTimestamp":null,"CoBuyerOfficeFax":null,"CoBuyerAgentFirstName":null,"CoBuyerAgentPager":null,"CoListOfficeName":null,"PurchaseContractDate":null,"ListAgentVoiceMailExt":null,"RoadSurfaceType":["Granite"],"ListAgentPager":null,"PriceChangeTimestamp":"2018-10-31T09:14:07.560Z","MapURL":null,"CoListAgentPager":null,"LeasableArea":null,"ListingContractDate":"2019-10-30","CoListOfficeKey":null,"MLSAreaMinor":null,"FarmLandAreaUnits":null,"Zoning":"CPO","ListAgentAOR":null,"CoBuyerAgentKeyNumeric":null,"GreenIndoorAirQuality":[],"LivingAreaSource":"Agent","MaintenanceExpense":null,"BuyerAgentVoiceMail":null,"DistanceToElectricNumeric":null,"ListAOR":null,"BelowGradeFinishedArea":1706,"CoBuyerOfficeName":null,"ListOfficeName":"Schmidt LLC Realty","TaxBlock":"Lot 4 of Block 49 of Tract 1017 of East Marlenchester","CoListAgentTollFreePhone":null,"BuyerFinancing":["Assumed","Cash","Contract","Conventional","FHA","FHA 203(b)","FHA 203(k)","Other","Private","Seller Financing","Trust Deed"],"GreenLocation":[],"MobileWidth":null,"GrazingPermitsPrivateYN":null,"Basement":[],"BusinessType":["Child Care"],"DualVariableCompensationYN":false,"Latitude":33.856765,"NumberOfSeparateGasMeters":null,"PhotosChangeTimestamp":null,"ListPrice":536333,"RoadFrontageType":[],"BuyerAgentKeyNumeric":null,"ListAgentTollFreePhone":null,"DistanceToGasUnits":null,"DistanceToPlaceofWorshipNumeric":null,"ListOfficePhone":null,"CoListAgentFax":null,"GreenEnergyGeneration":[],"DOH1":null,"DOH2":null,"FoundationArea":5527350,"DOH3":null,"BelowGradeFinishedAreaSource":"Agent","CoBuyerOfficeKey":null,"CoListAgentHomePhone":null,"ElectricExpense":null,"CoListOfficeMlsId":null,"DistanceToElectricComments":null,"CoBuyerOfficePhoneExt":null,"AssociationFee2Frequency":"One Time","CoListAgentVoiceMailExt":null,"StateOrProvince":"Indiana","AboveGradeFinishedAreaUnits":"Acres","DistanceToSewerComments":null,"ListOfficeAOR":null,"StreetAdditionalInfo":null,"GreenBuildingVerificationType":null,"CoveredSpaces":4,"MiddleOrJuniorSchool":"Dietrich Group","AssociationFeeIncludes":["Earthquake Insurance","Maintenance Grounds","Security","Cable TV"],"CoListAgentMobilePhone":null,"ConcessionsComments":"Front door needs repair","SyndicateTo":["Zillow"],"VirtualTourURLUnbranded":null,"Gas":["Available"],"CoListAgentEmail":null,"LandLeaseExpirationDate":null,"FrontageLength":"63","WorkmansCompensationExpense":null,"ListOfficeKeyNumeric":null,"CoListOfficeAOR":null,"Disclosures":["Bylaw Infractions","Environmental Concerns"],"ListOfficeKey":"O_5dba1f96cf17cd5b43eb02d6","DistanceToGasNumeric":null,"FireplaceYN":true,"BathroomsThreeQuarter":3,"CoBuyerAgentCellPhone":null,"BridgeModificationTimestamp":"2019-08-17T04:04:39.339Z","YearBuiltEffective":null,"EntryLevel":null,"ListAgentFullName":"Tyler Waino Reinger","TaxBookNumber":null,"DistanceToSchoolBusNumeric":null,"ListAgentMobilePhone":null,"ShowingContactPhoneExt":null,"MainLevelBathrooms":2,"PropertyCondition":[],"FrontageType":[],"Stories":2,"DevelopmentStatus":[],"GrossIncome":null,"ParcelNumber":"1650","ShowingDays":null,"CoBuyerAgentAOR":null,"ShowingRequirements":null,"UnitsFurnished":null,"FuelExpense":null,"CoListAgentVoiceMail":null,"FoundationDetails":["Slurry"],"View":[],"SignOnPropertyYN":false,"OperatingExpense":null,"LeaseRenewalOptionYN":null,"LeaseRenewalCompensation":[],"YearBuiltDetails":"Optio et quis sed et. Quo voluptatem provident facere illum nesciunt est. Optio animi dolorum accusantium. Sit totam porro modi et sit.","BuyerAgentPager":null,"HighSchool":"Kshlerin Group","LeaseConsideredYN":true,"HomeWarrantyYN":true,"Levels":["One Level","Two Level","Split Level","Three or More Level","Multi Level"],"OperatingExpenseIncludes":[],"StreetSuffixModifier":null,"IDXParticipationYN":false,"DistanceToFreewayNumeric":null,"ListAgentLastName":"Reinger","ListAgentURL":null,"InteriorFeatures":["Possimus quia blanditiis sed unde expedita. Et soluta omnis et. Quo aliquid dolor eligendi ut et architecto. Qui autem id corporis rem aspernatur perferendis. Vel corporis suscipit ut et."],"LockBoxType":["Enim similique quaerat est magni explicabo laudantium dignissimos quos. Ipsa quo porro voluptatem voluptatibus sequi commodi. Voluptatum nulla ad mollitia sint quo nihil."],"OffMarketDate":null,"CoBuyerAgentMlsId":null,"PowerProductionType":null,"DistanceToPhoneServiceNumeric":null,"DistanceToWaterComments":null,"CloseDate":"2019-07-15","ApprovalStatus":null,"StreetSuffix":null,"DistanceToPhoneServiceUnits":null,"HorseAmenities":[],"ListAgentMlsId":"5dba1fa6a2a50c5b81f08b12","CoListAgentNameSuffix":null,"ListOfficePhoneExt":null,"WaterSewerExpense":null,"GrazingPermitsForestServiceYN":null,"LotSizeDimensions":"775 x 232 x 436 x 106","ModificationTimestamp":"2019-04-17T09:14:35.266Z","PropertyAttachedYN":false,"BuyerAgentKey":null,"TaxLot":"Lot 6 of Block 9 of Tract 1637 of Port Earl","BusinessName":"Hoppe Inc","BuyerAgentEmail":null,"Coordinates":[-118.156681,33.856765],"AccessCode":"nlct","CoBuyerOfficeMlsId":null,"ListAgentNamePrefix":null,"OriginatingSystemID":"test","HorseYN":false,"LotDimensionsSource":"Assessor","Country":"US","UnitNumber":null,"CoListAgentPreferredPhoneExt":null,"OpenParkingYN":false,"TransactionBrokerCompensation":null,"LeasableAreaUnits":null,"MobileLength":null,"CoBuyerOfficeAOR":null,"NumberOfUnitsVacant":null,"ListOfficeMlsId":"5dba1f96cf17cd5b43eb02d7","Inclusions":"Nam accusantium quia iste placeat voluptatem. Nulla fugit vel aut dolorum. Ab laudantium ut quas distinctio est consequatur accusamus. Aut dolor reprehenderit nihil quam placeat.","ListTeamKeyNumeric":null,"ListAgentDirectPhone":null,"CoBuyerAgentOfficePhone":null,"VacancyAllowance":null,"AssociationPhone":"369.489.4518","ConcessionsAmount":44891.948935,"VirtualTourURLBranded":null,"RoomType":null,"CoListAgentFullName":null,"CoListAgentKey":null,"BelowGradeFinishedAreaUnits":"Square Meteres","CoListAgentMiddleName":null,"CoListOfficeURL":null,"RentControlYN":null,"EntryLocation":"Elevator","BuyerAgentMobilePhone":null,"SpaYN":false,"SpaFeatures":[],"ShowingContactPhone":"1-878-815-6232 x4013","BuyerAgentFirstName":null,"DistanceToPlaceofWorshipUnits":null,"ExistingLeaseType":[],"BathroomsHalf":1,"GardnerExpense":null,"LotSizeArea":null,"Sewer":["Septic"],"ExpirationDate":null,"SyndicationRemarks":null,"Model":null,"BuyerAgentLastName":null,"MaloneId":null,"ListAgentStateLicense":null,"StreetName":null,"ShowingAttendedYN":null,"AboveGradeFinishedAreaSource":"Agent","ListOfficeFax":null,"AnchorsCoTenants":"Klocko and Sons,Wintheiser and Sons","PatioAndPorchFeatures":["expedita","voluptas","eligendi","vitae","quia","odio"],"BuyerAgentCellPhone":null,"NumberOfLots":null,"ParkManagerPhone":null,"ListTeamName":null,"MainLevelBedrooms":null,"CityRegion":"West Isabel","NumberOfPartTimeEmployees":null,"LockBoxSerialNumber":"ss0jmbxosvrx08szogqt5967z","DistanceToBusUnits":null,"Utilities":[],"FireplaceFeatures":["One","Living Room Fireplace"],"WindowFeatures":[],"SpecialListingConditions":["Standard","REO"],"NewConstructionYN":false,"BuyerAgentAOR":null,"ParkName":null,"NumberOfBuildings":null,"GarageSpaces":1,"OriginalListPrice":244896,"AssociationFee2":440,"HoursDaysOfOperationDescription":null,"GreenEnergyEfficient":["Energy efficient doors"],"Media":[{"Order":1,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/04.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a97","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a97","ShortDescription":"Strenuus patrocinor cavus omnis careo."},{"Order":2,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/14.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a98","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a98","ShortDescription":"Ait argumentum certe bonus cotidie."},{"Order":3,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/24.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a99","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a99","ShortDescription":"Varietas autem ventus viduo."},{"Order":4,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/31.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a9a","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a9a","ShortDescription":"Apostolus officiis dolor conservo defendo turpis."},{"Order":5,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/09.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a9b","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a9b","ShortDescription":"Summa et angulus."},{"Order":6,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/34.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a9c","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a9c","ShortDescription":"Est altus velum contabesco stabilis."},{"Order":7,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/03.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a9d","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a9d","ShortDescription":"Animi verto audacia."},{"Order":8,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/23.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a9e","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a9e","ShortDescription":"Comis talus vergo quidem tracto."},{"Order":9,"MediaURL":"https://s3.amazonaws.com/retsly-importd-production/test_data/listings/17.jpg","ResourceRecordKey":"ME_KEY_5dba1fba4aa4055b9f296a9f","ResourceName":"Property","ClassName":"Residential","MediaCategory":"Photo","MimeType":"image/jpeg","MediaObjectID":"ME_5dba1fba4aa4055b9f296a9f","ShortDescription":"Et desparatus est culpa blanditiis voluptas."}],"CapRate":null,"RentIncludes":[],"DistanceToSchoolsUnits":null,"BuyerOfficeKeyNumeric":null,"UnitTypeType":null,"AccessibilityFeatures":[],"FarmLandAreaSource":null,"HighSchoolDistrict":"North Carolina","OriginalEntryTimestamp":"2019-01-27T02:43:01.583Z","BuildingFeatures":["Cafeteria","Lounge","Elevator","Concierge Service"],"OwnershipType":null,"SourceSystemKey":null,"Ownership":"Partnership","BuyerAgentMlsId":null,"OwnerName":null,"Exclusions":"Ab labore omnis voluptate officia id. Optio nihil esse voluptatem. Non molestiae ipsam provident ut. Est odio ut laudantium vel molestiae suscipit deserunt.","CopyrightNotice":"Et omnis et consectetur harum repellendus. Eum provident velit quis blanditiis aut ea. Esse quaerat cumque autem quia ratione consequatur delectus.\n \r\tVoluptate provident similique aliquid. Sapiente odit aut tenetur nihil et enim eos. Deleniti eius quia nemo optio ipsam dignissimos.","ShowingContactName":"Margret Jaclyn Gorczany","MobileDimUnits":null,"LotFeatures":["sed","enim","impedit","unde","fuga"],"CoBuyerAgentOfficePhoneExt":null,"License3":null,"PostalCode":"78361","License1":null,"License2":null,"BuyerOfficeMlsId":null,"DocumentsAvailable":[],"DistanceToShoppingUnits":null,"NumberOfUnitsTotal":13,"BuyerOfficeName":null,"AssociationFee":128,"LeaseAmount":null,"LotSizeSquareFeet":1684,"DistanceToSewerUnits":null,"CoBuyerAgentFullName":null,"TenantPays":[],"MiddleOrJuniorSchoolDistrict":"Colorado","DistanceToShoppingComments":null,"Electric":[],"ArchitecturalStyle":["placeat","suscipit","qui","harum","quis","dicta","ipsam"],"MobileHomeRemainsYN":null,"NewTaxesExpense":null,"VideosChangeTimestamp":null,"CoBuyerOfficeURL":null,"TaxStatusCurrent":["Assessed"],"UnparsedAddress":null,"OpenParkingSpaces":0,"CoListOfficePhone":null,"TransactionBrokerCompensationType":null,"WoodedArea":null,"LicensesExpense":null,"BuyerOfficeEmail":null,"CoListAgentAOR":null,"CoBuyerAgentFax":null,"FeedTypes":[]}]}","status":200,"url":"https://api.bridgedataoutput.com/api/v2/OData/test/Property?access_token=6baca547742c6f96a6ff71b138424f21"},"revalidate":31536000,"tags":[]}